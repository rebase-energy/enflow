Search.setIndex({"docnames": ["assets/base", "assets/battery", "assets/energysystem", "assets/geospatial", "assets/heatpump", "assets/hydro", "assets/powergrid", "assets/solar", "assets/timeseries", "assets/wind", "experiments/benchmark", "experiments/experiment", "experiments/scenarios", "index", "introduction", "models/agent", "models/optimizer", "models/predictor", "models/simulator", "notebooks/gefcom2014_solar", "notebooks/heftcom2024", "problem/checks", "problem/dataset", "problem/environments", "problem/objectives", "spaces/base", "spaces/input", "spaces/output", "walkthrough"], "filenames": ["assets/base.rst", "assets/battery.rst", "assets/energysystem.rst", "assets/geospatial.rst", "assets/heatpump.rst", "assets/hydro.rst", "assets/powergrid.rst", "assets/solar.rst", "assets/timeseries.rst", "assets/wind.rst", "experiments/benchmark.rst", "experiments/experiment.rst", "experiments/scenarios.rst", "index.rst", "introduction.rst", "models/agent.rst", "models/optimizer.rst", "models/predictor.rst", "models/simulator.rst", "notebooks/gefcom2014_solar.ipynb", "notebooks/heftcom2024.ipynb", "problem/checks.rst", "problem/dataset.rst", "problem/environments.rst", "problem/objectives.rst", "spaces/base.rst", "spaces/input.rst", "spaces/output.rst", "walkthrough.rst"], "titles": ["Base", "Battery", "Energy System", "Geospatial", "Heatpump", "Hydro", "Power Grid", "Solar", "Timeseries", "Wind", "Benchmark", "Experiment", "Scenarios", "enflow: Open-source energy modelling framework", "Introduction", "Agent Class", "Optimizer Class", "Predictor Class", "Simulator Class", "GEFCom2024 Solar Example", "HEFTCom2024", "Checks", "Dataset", "Environments", "Objectives", "Base Space", "Input Space", "Output Space", "Walkthrough of the <cite>enflow</cite> framework"], "terms": {"class": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 20, 22, 25, 26, 27], "emflow": [], "fixedmount": 7, "surface_tilt": [7, 19], "float": [0, 1, 3, 4, 5, 6, 7, 9], "0": [3, 7, 19, 20], "surface_azimuth": [7, 19], "sourc": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 22, 25, 26, 27], "base": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 22, 26, 27], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 19, 22, 25], "singleaxistrackermount": 7, "axis_tilt": 7, "axis_azimuth": 7, "max_angl": 7, "tupl": [0, 3, 7, 8, 18, 25], "90": [7, 20], "backtrack": 7, "bool": [0, 1, 3, 4, 7, 8, 9], "true": [0, 1, 3, 4, 7, 8, 9, 19, 20], "gcr": 7, "2857142857142857": 7, "cross_axis_tilt": 7, "racking_model": 7, "str": [0, 1, 3, 4, 5, 6, 7, 8, 9, 20, 22], "none": [0, 1, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 20, 22], "module_height": 7, "pvarrai": [7, 19], "capac": [4, 5, 6, 7, 9, 19, 20], "surface_area": [5, 6, 7], "effici": [5, 6, 7, 14, 28], "modul": [7, 13], "module_typ": [7, 19], "glass_polym": [7, 19], "module_paramet": 7, "dict": [5, 6, 7, 9, 18, 20, 22], "panda": [0, 1, 3, 4, 5, 6, 7, 8, 9, 19, 20, 22], "core": [0, 5, 6, 7, 8, 9, 14, 19, 22], "seri": [0, 1, 4, 7, 8, 9], "temperature_model_paramet": 7, "name": [0, 1, 3, 4, 7, 8, 9, 17, 19, 20, 22], "locat": [0, 1, 3, 4, 5, 6, 7, 8, 9, 20], "energydatamodel": [0, 1, 7, 8, 9, 19, 22], "geospati": [0, 1, 7, 8, 9, 13], "geoloc": [0, 1, 3, 4, 7, 8, 9], "longitud": [0, 1, 3, 4, 7, 9, 19, 20], "latitud": [0, 1, 3, 4, 7, 9, 19, 20], "altitud": [0, 1, 3, 4, 7, 9, 19], "tz": [0, 1, 3, 4, 7, 9], "timezon": [0, 1, 3, 4, 7, 9], "timeseri": [0, 1, 4, 7, 9, 13, 19], "abstract": [15, 16, 17, 18], "energyasset": [0, 1, 4, 7, 9], "get_timeseri": 7, "t": [1, 4, 7, 9, 19, 20], "option": [1, 3, 4, 5, 6, 7, 9, 16, 20], "geometry_to_geojson": [0, 1, 3, 4, 7, 8, 9], "geometri": [0, 1, 3, 4, 7, 8, 9], "plot_timeseri": [0, 1, 4, 7, 9, 19], "start_dat": [0, 1, 4, 7, 8, 9], "datetimeindex": [0, 1, 4, 7, 8, 9], "end_dat": [0, 1, 4, 7, 8, 9], "ax": [0, 1, 3, 4, 7, 8, 9, 19, 20], "plot": [0, 1, 4, 7, 8, 9, 13], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 14, 15, 17, 20, 28], "its": [0, 1, 3, 4, 7, 8, 9], "built": [0, 1, 4, 7, 8, 9, 14], "method": [0, 1, 3, 4, 7, 8, 9, 14, 17, 25], "arg": [0, 1, 3, 4, 7, 8, 9], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 26, 27], "start": [0, 1, 3, 4, 7, 8, 9, 18, 20], "date": [0, 1, 4, 7, 8, 9, 20], "end": [0, 1, 3, 4, 7, 8, 9], "return": [0, 1, 4, 7, 8, 9, 15, 16, 17, 18, 20], "matplotlib": [0, 1, 4, 7, 8, 9], "to_datafram": [0, 1, 3, 4, 7, 8, 9], "convert": [0, 1, 3, 4, 7, 8, 9, 25], "data": [0, 1, 3, 4, 7, 8, 9, 13, 14, 17, 22, 25], "datafram": [0, 1, 3, 4, 5, 6, 7, 8, 9, 20, 22], "to_geojson": [0, 1, 3, 4, 7, 8, 9], "exclude_non": [0, 1, 3, 4, 7, 8, 9], "to_json": [0, 1, 3, 4, 7, 8, 9, 19], "include_non": [0, 1, 3, 4, 7, 8, 9], "pytz": [1, 4, 7, 9], "pvsystem": 7, "pv_arrai": 7, "list": [0, 3, 7, 9, 20], "albedo": 7, "surface_typ": 7, "defin": [7, 13, 14, 19], "standard": [7, 14], "set": [3, 7, 14, 28], "system": [4, 7, 13, 14, 19, 28], "attribut": [5, 6, 7], "model": [5, 6, 7, 11, 14, 15, 16, 17, 18, 20, 26, 27, 28], "function": [3, 7, 13, 16], "thi": [3, 7, 14, 17, 20, 28], "describ": [7, 28], "collect": [0, 3, 7, 22], "interact": [7, 14], "compon": [3, 7], "rather": 7, "than": [3, 7], "an": [3, 4, 5, 6, 7, 15, 18], "instal": [7, 13], "ground": 7, "It": [3, 7], "i": [3, 7, 14, 17, 19, 20], "typic": [3, 7], "combin": [3, 7], "modelchain": 7, "test": [3, 14], "here": [], "windturbin": 9, "frame": [0, 5, 6, 7, 8, 9, 22], "hub_height": 9, "rotor_diamet": 9, "turbine_model": 9, "power_curv": 9, "nonetyp": [0, 5, 6, 8, 9], "power_coefficient_curv": 9, "create_table_represent": 9, "windfarm": [9, 20], "wind_turbin": 9, "farm_effici": 9, "windpowerarea": 9, "area": [3, 5, 6, 8, 9], "purpos": [3, 13], "featur": [3, 13, 17], "contribut": 13, "support": 13, "contact": 13, "step": [13, 18, 20], "1": [3, 13, 19, 20], "your": [13, 14], "2": [3, 13, 19, 20], "specifi": [3, 13], "dynam": 13, "state": [13, 15, 18, 20], "variabl": 13, "3": [3, 13, 19, 20], "action": [13, 15, 18, 20, 25], "4": [3, 13, 19, 20], "creat": [3, 13, 14, 17, 25], "environ": [13, 14, 15], "5": [3, 13, 19, 20], "establish": 13, "6": [3, 13, 19, 20], "design": [13, 14], "agent": 13, "polici": 13, "7": [13, 19, 20], "run": [11, 13, 14], "simul": [13, 14], "conclus": 13, "pv": 7, "wind": [13, 20], "dataset": [13, 20], "microgridenv": [], "hybridpowerplantenv": [], "energycommunityenv": [], "basescor": 20, "meansquarederror": [], "meanabsoluteerror": [], "check": [3, 13], "energybalancecheck": [], "massbalancecheck": [], "basespac": [13, 25, 26, 27], "input": [3, 13, 14, 17], "inputspac": [13, 18, 26], "statespac": [13, 26], "output": [5, 6, 13, 17, 28], "outputspac": [13, 27], "actionspac": [13, 27], "predictor": 13, "optim": [13, 14, 20], "experi": 15, "benchmark": [13, 14], "scenario": [13, 14], "gefcom2024": 13, "solar": [13, 20], "load": [3, 13, 17], "gefcom2014": 13, "index": [3, 13, 19, 20], "search": 13, "page": [13, 14], "project": [3, 14], "cut": 14, "edg": [3, 14], "framework": 14, "analysi": 14, "energi": [4, 14, 26, 27], "resourc": [14, 28], "util": 14, "principl": 14, "openai": 14, "gym": [14, 20], "api": [14, 20], "offer": 14, "flexibl": 14, "where": 14, "variou": 14, "approach": [14, 28], "manag": 14, "can": [3, 14, 28], "philosophi": 14, "python": 14, "first": [14, 20], "problem": [11, 14, 16, 20, 22], "centric": 14, "reusabl": 14, "modular": 14, "verif": 14, "valid": [3, 14], "enabl": 14, "mantra": 14, "agnost": 14, "facilit": 14, "research": 14, "develop": 14, "field": 14, "By": 14, "provid": [3, 4, 14, 20, 28], "extens": 14, "platform": 14, "allow": [3, 14, 28], "engin": 14, "scientist": 14, "divers": 14, "implement": [14, 17, 28], "varieti": 14, "algorithm": [3, 14], "differ": [3, 14, 28], "under": 14, "consist": [3, 14], "condit": 14, "explor": [14, 28], "innov": 14, "strategi": [14, 28], "integr": 14, "leverag": 14, "familiar": 14, "robust": 14, "ensur": 14, "eas": 14, "broad": 14, "compat": [3, 14], "exist": 14, "tool": 14, "mind": 14, "user": [14, 19], "easili": 14, "custom": 14, "extend": [3, 14], "suit": 14, "specif": [14, 28], "need": [3, 14], "comprehens": [14, 28], "includ": [14, 28], "thorough": 14, "effect": 14, "comparison": [3, 14], "commun": 14, "driven": 14, "open": 14, "promot": 14, "collabor": 14, "solv": 14, "complex": 14, "To": [3, 14], "begin": [14, 28], "packag": [14, 19], "pip": 14, "Then": 14, "document": [3, 14, 19], "learn": [14, 15], "more": [3, 14, 28], "about": [14, 28], "up": [14, 28], "we": 14, "welcom": 14, "whether": 14, "": [3, 14, 18], "improv": 14, "ad": [3, 14], "new": [3, 14, 18], "fix": 14, "bug": 14, "valuabl": 14, "see": 14, "our": 14, "guidelin": 14, "inform": [14, 28], "how": [14, 28], "get": [0, 3, 8, 14], "involv": [3, 14, 28], "For": 14, "question": 14, "feedback": 14, "pleas": 14, "visit": 14, "github": [14, 19], "issu": 14, "http": 14, "com": 14, "yourusernam": 14, "u": 14, "directli": 14, "through": 14, "websit": 14, "thank": 14, "you": [14, 28], "interest": 14, "look": 14, "forward": 14, "wai": 14, "which": [3, 14, 17, 28], "abc": [15, 16, 17, 18], "choose_act": [], "choos": 15, "given": [3, 15], "paramet": [15, 16, 17, 18], "current": 15, "chosen": 15, "reward": 15, "next_stat": [15, 20], "from": [0, 3, 8, 15, 17, 19, 20, 25, 28], "train": [15, 17, 20], "taken": [3, 15], "receiv": 15, "next": [15, 18, 28], "objective_funct": 16, "constraint": 16, "perform": [4, 16, 28], "minim": [16, 28], "maxim": [16, 28], "result": [3, 16], "load_data": 17, "recommend": [3, 17], "mandatori": 17, "subclass": 17, "mai": [3, 17], "overrid": 17, "create_featur": 17, "sthe": 17, "predict": [17, 20], "make": [17, 20, 28], "must": [3, 17], "made": [17, 28], "initial_st": [18, 20], "reset": [18, 20], "initi": 18, "updat": 18, "appli": 18, "A": [3, 18, 25], "contain": [3, 18], "ani": [3, 18, 28], "addit": [3, 18, 20, 28], "info": 18, "import": [3, 19, 20], "sy": 19, "o": 19, "path": [3, 19, 20], "insert": 19, "abspath": 19, "pd": [19, 20], "edm": 19, "emf": 19, "gefcom2014_solar": 19, "gefcom2014solarenv": 19, "importerror": 19, "traceback": 19, "most": 19, "recent": 19, "call": 19, "last": 19, "cell": 19, "In": 19, "line": [3, 19, 20], "gt": [19, 20], "cannot": 19, "39": 19, "sebaheg": 19, "__init__": [19, 20], "py": 19, "portfolio": [19, 20], "df": [0, 8, 19, 20], "nameerror": 19, "read_csv": [19, 20], "raw": 19, "csv": [19, 20], "index_col": [19, 20], "header": 19, "parse_d": [19, 20], "timeseries_1": 19, "column_nam": [0, 8, 19], "power": [5, 13, 19], "pvsystem_1": 19, "145": 19, "37": [19, 20], "595": 19, "38": [19, 20], "36": 19, "timeseries_2": 19, "pvsystem_2": 19, "602": 19, "327": 19, "35": [19, 20], "timeseries_3": 19, "pvsystem_3": 19, "951": 19, "31": [19, 20], "21": [19, 20], "asset": [0, 1, 3, 4, 5, 6, 7, 8, 9, 19, 20], "2013": 19, "06": 19, "01": [19, 20], "15": [19, 20], "lt": [19, 20], "figur": [3, 19], "size": 19, "640x480": 19, "xlabel": 19, "timestamp": [19, 20], "13": [19, 20], "column": [19, 20], "level": 19, "var134": 19, "var157": 19, "var164": 19, "var165": 19, "var166": 19, "var167": 19, "var169": 19, "var175": 19, "var178": 19, "var228": 19, "var78": 19, "var79": 19, "dtype": 19, "23": [19, 20], "len": [19, 20], "2012": 19, "04": 19, "00": [19, 20], "8760": 19, "file": [3, 19, 20], "venv_emflow": [], "lib": 19, "python3": 19, "11": [3, 19, 20], "site": 19, "ipython": 19, "interactiveshel": 19, "3553": 19, "run_cod": 19, "exec": 19, "code_obj": 19, "self": [3, 19, 20], "user_global_n": 19, "user_n": 19, "main": 19, "78": 19, "pv_production_2": 19, "space": [19, 20], "box": [19, 20], "low": [19, 20], "high": [19, 20], "shape": [3, 19, 20], "initial_datapoint": 19, "np": [19, 20], "float32": 19, "syntaxerror": 19, "invalid": [3, 19], "syntax": 19, "8": [3, 19, 20], "type": [0, 3, 5, 6, 7, 19, 20], "dataclass": 19, "baseproblem": 19, "union": [3, 19, 20], "energysystem": [0, 19], "9": [19, 20], "pass": 19, "descript": [20, 22], "energy_system": 20, "runner": [], "format": 25, "classmethod": [3, 25], "from_arrai": 25, "input_arrai": 25, "ndarrai": 25, "numpi": [20, 25], "arrai": [3, 25], "to_arrai": 25, "properti": [3, 7, 22, 25], "vector": 25, "from_tupl": 25, "input_tupl": 25, "to_tupl": [3, 25], "alia": [3, 8, 26, 27], "guid": 28, "librari": 28, "follow": 28, "facil": 28, "equip": 28, "other": [3, 28], "entiti": 28, "define_asset": 28, "add": [3, 20, 28], "detail": 28, "outlin": 28, "These": 28, "ar": [3, 20, 28], "repres": [3, 4, 5, 6, 28], "chang": 28, "over": 28, "time": [0, 8, 28], "dure": 28, "state_vari": 28, "define_st": 28, "now": [3, 28], "decis": 28, "define_act": 28, "elabor": 28, "possibl": [3, 28], "transit": 28, "respons": 28, "create_environ": 28, "further": 28, "should": [3, 28], "quantifi": 28, "goal": 28, "cost": 28, "define_object": 28, "agent_polici": 28, "design_polici": 28, "final": 28, "analyz": 28, "evalu": 28, "simulation_result": 28, "run_simul": 28, "instruct": 28, "what": 28, "expect": 28, "configur": 28, "fulli": 28, "understand": 28, "capabl": 28, "pinballloss": 20, "enerflow": [], "act": [15, 20], "quantil": 20, "score": 20, "y_true": 20, "y_pred": 20, "mean": 3, "comput": [], "pinbal": 20, "loss": [], "between": 3, "valu": [3, 20], "multipl": 3, "each": 3, "correspond": [], "param": [], "like": 3, "2d": [], "n_sampl": [], "n_quantil": [], "gymnasium": 20, "ef": 20, "geopanda": [], "gpd": [], "statsmodel": 20, "formula": 20, "smf": 20, "regress": [], "quantile_regress": [], "quantreg": 20, "iolib": 20, "smpickl": 20, "load_pickl": 20, "folium": 20, "pyplot": [], "plt": [], "mdate": [], "seaborn": [], "sn": [], "df_heftcom": 20, "data_heftcom2024": 20, "ref_datetim": 20, "valid_datetim": 20, "market_dai": 20, "df_coords_hornsea1": 20, "dwd_coords_hornsea1": 20, "df_coords_pes10": 20, "dwd_coords_pes10": 20, "area_pes10": 20, "geomultipolygon": [3, 7, 8, 20], "from_geojson": [3, 20], "pes10": 20, "geojson": [3, 7, 20], "hornsea": 20, "79": 20, "53": 20, "1218": 20, "solar_pes10": 20, "solarpowerarea": [7, 20], "geopolygon": [3, 7, 8, 9, 20], "m": 20, "map": 20, "zoom_start": 20, "feature_group1": 20, "featuregroup": 20, "farm": 20, "circlemark": 20, "radiu": [3, 20], "10": [3, 20], "color": [3, 20], "blue": 20, "add_to": 20, "feature_group2": 20, "multipolygon": [3, 20], "feature_group3": 20, "dwd": 20, "grid": [13, 20], "point": [3, 20], "lat": 20, "lon": 20, "red": 20, "row": 20, "iterrow": 20, "layercontrol": 20, "notebook": 20, "trust": 20, "heftcom2024": 13, "all": [3, 20], "organis": 20, "particip": 20, "free": 20, "extern": 20, "state_spac": 20, "solar_pow": 20, "inf": 20, "48": 20, "solar_instal": 20, "solar_avail": 20, "solar_forecast": 20, "wind_pow": 20, "wind_forecast": 20, "dayahead_pric": 20, "imbalance_pric": 20, "action_spac": 20, "power_quantile_forecast": 20, "power_bid": 20, "heftcom2024environ": 20, "env": 20, "def": 20, "train_end": 20, "time_lag": 20, "int": [0, 3, 5, 6, 8, 20], "els": [3, 20], "max": 20, "uniqu": 20, "idx_first_eval_dai": 20, "idx_count": 20, "initial_data": [], "market_day_previ": 20, "market_day_start_previ": 20, "get_level_valu": 20, "market_day_start": 20, "loc": 20, "solar_mwh_credit": 20, "reshap": 20, "solar_installedcapacity_mwp": 20, "solar_capacity_mwp": 20, "solardownwardradi": 20, "wind_mwh_credit": 20, "windspe": 20, "da_pric": 20, "ss_price": 20, "exogen": 20, "done": 20, "fals": [0, 1, 3, 4, 7, 8, 9, 20], "2023": 20, "marketrevenu": 20, "calcul": 20, "bid": 20, "product": 20, "day_ahead_pric": 20, "single_system_pric": 20, "revenu": 20, "07": 20, "model_nam": 20, "rang": [3, 20], "100": 20, "save_model": 20, "f": 20, "q": 20, "save": 20, "_q": 20, "pickl": 20, "load_model": 20, "x": [3, 20], "y": [3, 20], "k": 20, "v": 20, "squeez": 20, "item": 20, "mod": 20, "total_generation_mwh": 20, "b": 20, "print": 20, "fit": 20, "max_it": 20, "2500": 20, "22": 20, "dropna": 20, "20": 20, "keyboardinterrupt": [], "34": [], "exampl": [], "venv_heftcom2024": [], "168": [], "vcov": [], "kernel": [], "bandwidth": [], "p_tol": [], "kwarg": [3, 7], "166": [], "n_iter": [], "167": [], "beta0": [], "beta": [], "xtx": [], "dot": [], "xstar": [], "exog": 20, "169": [], "xty": [], "endog": [], "170": 20, "pinv": [], "24": 20, "arang": 20, "keyerror": [], "30": 20, "28": [], "29": 20, "33": 20, "q20": [], "25": 20, "26": 20, "27": 20, "load_predictor": 20, "scorer": 20, "nansum": 20, "2534482077": 20, "9752154": 20, "_": [], "append": 20, "titl": [], "text": 20, "loop": [], "glue": [], "togeth": [], "backtest": [], "constant": [], "random": [], "tabl": [], "66": 20, "factori": [0, 7], "abstractclass": [0, 3], "filenam": [0, 8], "get_data": [0, 8], "sensor": 0, "storage_capac": 1, "min_soc": 1, "max_charg": 1, "max_discharg": 1, "charge_effici": 1, "discharge_effici": 1, "add_asset": 0, "remove_asset": 0, "list_asset": 0, "get_summari": [], "energycommun": [], "trade": [], "maintain": [], "balanc": [], "subplot": 20, "docstr": 3, "from_point": 3, "linestr": 3, "coordin": 3, "basegeometri": 3, "compos": 3, "one": 3, "segment": 3, "dimension": 3, "ha": 3, "non": 3, "zero": 3, "length": 3, "approxim": 3, "curv": 3, "straight": 3, "unlik": 3, "linear": 3, "close": 3, "sequenc": 3, "z": 3, "numer": 3, "pair": 3, "tripl": 3, "n": 3, "two": 3, "svg": 3, "scale_factor": 3, "stroke_color": 3, "opac": 3, "polylin": 3, "element": 3, "factor": 3, "stroke": 3, "width": 3, "default": [3, 5, 6, 20], "hex": 3, "string": 3, "66cc99": 3, "ff3333": 3, "number": 3, "xy": 3, "separ": 3, "offset_curv": 3, "distanc": 3, "quad_seg": 3, "16": [3, 20], "join_styl": 3, "bufferjoinstyl": 3, "round": 3, "mitre_limit": 3, "multilinestr": 3, "right": 3, "left": [3, 20], "side": 3, "determin": 3, "sign": 3, "neg": 3, "offset": 3, "posit": 3, "resolut": 3, "buffer": 3, "around": 3, "vertex": 3, "increas": 3, "keyword": 3, "join": 3, "style": 3, "outsid": 3, "corner": 3, "accept": 3, "mitr": 3, "bevel": 3, "ratio": [3, 4], "limit": 3, "veri": 3, "sharp": 3, "when": [3, 5, 6], "meet": 3, "angl": 3, "miter": 3, "far": 3, "beyond": 3, "origin": 3, "prevent": 3, "unreason": 3, "control": 3, "maximum": [3, 5, 6], "exce": 3, "behaviour": 3, "regard": 3, "orient": [3, 20], "depend": 3, "geo": 3, "version": 3, "With": 3, "retain": 3, "same": 3, "direct": 3, "revers": 3, "wa": 3, "previou": 3, "tri": 3, "preserv": 3, "parallel_offset": 3, "altern": 3, "older": 3, "instead": 3, "kept": 3, "backward": 3, "almost_equ": 3, "decim": 3, "equal": 3, "place": 3, "deprec": 3, "sinc": 3, "remov": 3, "becaus": 3, "confus": 3, "equals_exact": 3, "refer": 3, "requir": 3, "order": 3, "1e": 3, "unitless": 3, "boundari": 3, "lower": 3, "dimens": 3, "bound": 3, "polygon": 3, "empti": 3, "null": 3, "minimum": 3, "region": 3, "minx": 3, "mini": 3, "maxx": 3, "maxi": 3, "cap_styl": 3, "single_sid": 3, "within": 3, "produc": 3, "dilat": 3, "eros": 3, "small": 3, "sometim": 3, "tidi": 3, "fillet": 3, "buffercapstyl": 3, "squar": [3, 5, 6], "flat": 3, "circular": 3, "both": 3, "rectangular": 3, "onli": 3, "while": [3, 20], "midpoint": 3, "touch": 3, "singl": 3, "indic": 3, "hand": 3, "regular": 3, "cap": 3, "alwai": 3, "ignor": 3, "forc": 3, "equival": 3, "cap_flat": 3, "quadseg": 3, "strictli": 3, "wkt": 3, "g": [3, 4, 5, 6], "gon": 3, "approx": 3, "unit": 3, "circl": 3, "1365484905459": 3, "128": 3, "141513801144": 3, "triangl": 3, "exterior": 3, "coord": 3, "centroid": 3, "geometr": 3, "center": 3, "contains_properli": 3, "complet": 3, "common": 3, "full": 3, "convex_hul": 3, "imagin": 3, "elast": 3, "band": 3, "stretch": 3, "convex": 3, "hull": 3, "less": 3, "three": 3, "member": 3, "multipoint": 3, "triangular": 3, "access": 3, "coordinatesequ": 3, "covered_bi": 3, "cover": 3, "cross": 3, "grid_siz": 3, "disjoint": 3, "dwithin": 3, "envelop": 3, "consid": 3, "topolog": 3, "toler": 3, "absolut": 3, "geom_typ": 3, "geometrytyp": 3, "has_z": 3, "have": 3, "hausdorff_dist": 3, "hausdorff": 3, "interpol": 3, "normal": 3, "along": 3, "measur": 3, "out": 3, "handl": 3, "clamp": 3, "them": 3, "If": 3, "interpret": 3, "fraction": 3, "line_interpolate_point": 3, "intersect": 3, "is_clos": 3, "applic": 3, "d": [3, 20], "is_empti": 3, "is_r": 3, "ring": 3, "is_simpl": 3, "simpl": 3, "is_valid": 3, "definit": 3, "sub": 3, "line_locate_point": 3, "nearest": 3, "minimum_clear": 3, "node": 3, "could": 3, "move": 3, "minimum_rotated_rectangl": 3, "rotat": 3, "rectangl": 3, "enclos": 3, "constrain": 3, "parallel": 3, "degener": 3, "oriented_envelop": 3, "form": 3, "canon": 3, "part": 3, "multi": 3, "overlap": 3, "point_on_surfac": 3, "guarante": 3, "cheapli": 3, "representative_point": 3, "relat": 3, "de": 3, "9im": 3, "matrix": 3, "relate_pattern": 3, "pattern": 3, "code": 3, "relationship": 3, "satisfi": 3, "copi": [3, 17], "interior": 3, "unchang": 3, "is_ccw": 3, "clockwis": 3, "max_segment_length": 3, "vertic": 3, "everi": 3, "so": 3, "longer": 3, "evenli": 3, "subdivid": 3, "densifi": 3, "unmodifi": 3, "array_lik": 3, "greater": 3, "simplifi": 3, "preserve_topologi": 3, "dougla": 3, "peucker": 3, "unless": 3, "topologi": 3, "otherwis": 3, "symmetric_differ": 3, "symmetr": 3, "wkb": 3, "represent": 3, "wkb_hex": 3, "shell": 3, "hole": 3, "from_bound": 3, "xmin": 3, "ymin": 3, "xmax": 3, "ymax": 3, "construct": 3, "spatial": 3, "fill_color": 3, "fill": 3, "batteri": 13, "hydro": [6, 13], "heatpump": 13, "reservoir": [5, 6], "average_depth": [5, 6], "hydroelectr": [5, 6], "plant": [5, 6], "store": [5, 6], "water": [5, 6], "total": [5, 6, 20], "cubic": [5, 6], "meter": [5, 6], "surfac": [5, 6], "kilomet": [5, 6], "averag": [5, 6], "depth": [5, 6], "geograph": [5, 6], "hydroturbin": [5, 6], "turbine_typ": [5, 6], "operational_sinc": [5, 6], "individu": [5, 6], "turbin": [5, 6], "e": [4, 5, 6], "franci": [5, 6], "kaplan": [5, 6], "megawatt": [5, 6], "mw": [5, 6], "percentag": [5, 6], "year": [5, 6], "becam": [5, 6], "oper": [5, 6], "hydropowerpl": [5, 6], "river": [5, 6], "annual_output": [5, 6], "reservoir_capac": [5, 6], "environmental_impact": [5, 6], "maintenance_schedul": [5, 6], "powergrid": 6, "electricitydemand": 8, "electricityconsumpt": 8, "electricityareademand": 8, "electricityareaconsumpt": 8, "electricitysuppli": 8, "electricityproduct": 8, "electricityareasuppli": 8, "electricityareaproduct": 8, "heatingdemand": 8, "heatingconsumpt": 8, "heatingareademand": 8, "cop": 4, "energy_sourc": 4, "heat": 4, "pump": 4, "cool": 4, "kilowatt": 4, "kw": 4, "coeffici": 4, "electr": 4, "consum": 4, "primari": 4, "geotherm": 4, "time_spac": 20, "max_length": 20, "min_length": 20, "exogeneous_spac": 20, "n_market_dai": 20, "return_datafram": 20, "initial_datafram": 20, "ref_tim": 20, "_create_st": 20, "idx_market_dai": 20, "strftime": 20, "idx": 20, "initial_df": 20, "train_data": 20, "12": 20, "32": 20, "092224429059414": 20, "14": 20, "17": 20, "18": 20, "predictions_q": 20, "droplevel": 20, "mip": 20, "solar_mw": 20, "wind_mw": 20, "boa_mwh": 20, "predictions_q20": 20, "predictions_q30": 20, "predictions_q40": 20, "predictions_q50": 20, "predictions_q60": 20, "predictions_q70": 20, "predictions_q80": 20, "predictions_q90": 20, "2020": 20, "09": 20, "825196": 20, "001624": 20, "76": 20, "2108": 20, "444662": 20, "2206": 20, "067896": 20, "131": 20, "008": 20, "00000": 20, "189591": 20, "52": 20, "602142": 20, "968993": 20, "80": 20, "419721": 20, "95": 20, "607469": 20, "113": 20, "514992": 20, "138": 20, "769492": 20, "185": 20, "531116": 20, "2423": 20, "751669": 20, "601748": 20, "004990": 20, "87": 20, "630": 20, "87000": 20, "212647": 20, "45": 20, "440970": 20, "58": 20, "946516": 20, "71": 20, "895678": 20, "86": 20, "142042": 20, "102": 20, "906343": 20, "126": 20, "432197": 20, "171": 20, "951934": 20, "2003": 20, "149738": 20, "378300": 20, "008356": 20, "558": 20, "47": 20, "30000": 20, "02": 20, "626327": 20, "636333": 20, "51": 20, "282054": 20, "63": 20, "798042": 20, "77": 20, "194467": 20, "92": 20, "910992": 20, "114": 20, "863054": 20, "159": 20, "342024": 20, "1203": 20, "351890": 20, "161918": 20, "000241": 20, "75": 20, "574": 20, "27000": 20, "655625": 20, "460931": 20, "44": 20, "278910": 20, "56": 20, "398887": 20, "69": 20, "080706": 20, "83": 20, "845629": 20, "104": 20, "449515": 20, "147": 20, "932062": 20, "1180": 20, "475379": 20, "945536": 20, "008838": 20, "49": 20, "818": 20, "66000": 20, "03": 20, "180092": 20, "774801": 20, "749784": 20, "468942": 20, "61": 20, "474223": 20, "382278": 20, "94": 20, "782600": 20, "137": 20, "453701": 20, "714": 20, "881095": 20, "973990": 20, "006017": 20, "127": 20, "97": 20, "2332": 20, "037710": 20, "2487": 20, "180474": 20, "594": 20, "422": 20, "105": 20, "46": 20, "336": 20, "709802": 20, "384": 20, "475883": 20, "419": 20, "608531": 20, "447": 20, "791603": 20, "473": 20, "342823": 20, "496": 20, "363486": 20, "522": 20, "909066": 20, "553": 20, "146818": 20, "40366": 20, "565067": 20, "713284": 20, "012358": 20, "99": 20, "578": 20, "362": 20, "188": 20, "33001": 20, "314": 20, "445034": 20, "361": 20, "188391": 20, "396": 20, "432284": 20, "425": 20, "918531": 20, "453": 20, "224644": 20, "478": 20, "242510": 20, "508": 20, "093521": 20, "543": 20, "801611": 20, "17767": 20, "344153": 20, "453822": 20, "006461": 20, "590": 20, "122": 20, "291": 20, "533937": 20, "649465": 20, "371": 20, "658430": 20, "402": 20, "265137": 20, "431": 20, "315782": 20, "458": 20, "298024": 20, "491": 20, "614456": 20, "532": 20, "930841": 20, "23309": 20, "211453": 20, "194361": 20, "000563": 20, "110": 20, "82": 20, "524": 20, "642": 20, "195": 20, "103": 20, "268": 20, "265598": 20, "311": 20, "287853": 20, "345": 20, "746718": 20, "377": 20, "272451": 20, "407": 20, "921540": 20, "436": 20, "819809": 20, "585098": 20, "520": 20, "728865": 20, "15612": 20, "879041": 20, "863417": 20, "000624": 20, "93": 20, "468": 20, "762": 20, "238": 20, "685050": 20, "278": 20, "568551": 20, "947690": 20, "344": 20, "293837": 20, "376": 20, "674832": 20, "816720": 20, "448": 20, "733842": 20, "503": 20, "187818": 20, "13269": 20, "677237": 20, "53040": 20, "plotli": 20, "graph_obj": 20, "go": 20, "make_subplot": 20, "fig": 20, "col": 20, "shared_xax": 20, "vertical_spac": 20, "trace": 20, "add_trac": 20, "scatter": 20, "mode": 20, "gener": 20, "q50": 20, "da": 20, "price": 20, "im": 20, "cumsum": 20, "cumul": 20, "update_layout": 20, "xaxis4": 20, "rangeslid": 20, "visibl": 20, "height": 20, "500": 20, "legend": 20, "h": 20, "xanchor": 20, "yanchor": 20, "bottom": 20, "show": 20, "displai": [], "vnd": [], "v1": [], "json": [], "206": 20, "market": 20, "dai": 20, "date_rang": 20, "to_datetim": 20, "period": 20, "freq": 20, "30min": 20, "209": 20, "concat": 20, "write_html": [], "chart": [], "html": [], "full_html": [], "io": 20, "pio": 20, "render": 20, "enflow": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27], "venv_enflow": 19, "get_loc": [0, 1, 4, 7, 9], "energycollect": [0, 22], "add_collect": 0, "list_collect": 0, "remove_collect": 0, "get_asset_by_nam": 0, "to_tre": 0, "only_nam": 0, "show_typ": 0, "return_tre": 0, "utc": 3, "to_pvlib": [3, 7], "inverter_paramet": 7, "open_rack": 7, "list_data": 22}, "objects": {"enflow.assets": [[0, 0, 0, "-", "base"], [1, 0, 0, "-", "battery"], [3, 0, 0, "-", "geospatial"], [4, 0, 0, "-", "heatpump"], [5, 0, 0, "-", "hydro"], [6, 0, 0, "-", "powergrid"], [7, 0, 0, "-", "solar"], [8, 0, 0, "-", "timeseries"], [9, 0, 0, "-", "wind"]], "enflow.assets.base": [[0, 1, 1, "", "EnergyAsset"], [0, 1, 1, "", "EnergyCollection"], [0, 1, 1, "", "Sensor"], [0, 1, 1, "", "TimeSeries"]], "enflow.assets.base.EnergyAsset": [[0, 2, 1, "", "altitude"], [0, 3, 1, "", "geometry_to_geojson"], [0, 3, 1, "", "get_location"], [0, 2, 1, "", "latitude"], [0, 2, 1, "", "location"], [0, 2, 1, "", "longitude"], [0, 2, 1, "", "name"], [0, 3, 1, "", "plot_timeseries"], [0, 2, 1, "", "timeseries"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"], [0, 2, 1, "", "tz"]], "enflow.assets.base.EnergyCollection": [[0, 3, 1, "", "add_assets"], [0, 3, 1, "", "add_collection"], [0, 2, 1, "", "assets"], [0, 2, 1, "", "collections"], [0, 3, 1, "", "geometry_to_geojson"], [0, 3, 1, "", "get_asset_by_name"], [0, 3, 1, "", "list_assets"], [0, 3, 1, "", "list_collections"], [0, 2, 1, "", "name"], [0, 3, 1, "", "remove_asset"], [0, 3, 1, "", "remove_collection"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"], [0, 3, 1, "", "to_tree"]], "enflow.assets.base.Sensor": [[0, 3, 1, "", "geometry_to_geojson"], [0, 2, 1, "", "location"], [0, 2, 1, "", "name"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"]], "enflow.assets.base.TimeSeries": [[0, 2, 1, "", "column_names"], [0, 2, 1, "", "df"], [0, 2, 1, "", "filename"], [0, 3, 1, "", "geometry_to_geojson"], [0, 3, 1, "", "get_data"], [0, 2, 1, "", "name"], [0, 3, 1, "", "plot"], [0, 3, 1, "", "to_dataframe"], [0, 3, 1, "", "to_geojson"], [0, 3, 1, "", "to_json"]], "enflow.assets.battery": [[1, 1, 1, "", "Battery"]], "enflow.assets.battery.Battery": [[1, 2, 1, "", "altitude"], [1, 2, 1, "", "charge_efficiency"], [1, 2, 1, "", "discharge_efficiency"], [1, 3, 1, "", "geometry_to_geojson"], [1, 3, 1, "", "get_location"], [1, 2, 1, "", "latitude"], [1, 2, 1, "", "location"], [1, 2, 1, "", "longitude"], [1, 2, 1, "", "max_charge"], [1, 2, 1, "", "max_discharge"], [1, 2, 1, "", "min_soc"], [1, 2, 1, "", "name"], [1, 3, 1, "", "plot_timeseries"], [1, 2, 1, "", "storage_capacity"], [1, 2, 1, "", "timeseries"], [1, 3, 1, "", "to_dataframe"], [1, 3, 1, "", "to_geojson"], [1, 3, 1, "", "to_json"], [1, 2, 1, "", "tz"]], "enflow.assets.geospatial": [[3, 1, 1, "", "GeoLocation"], [3, 1, 1, "", "GeoMultiPolygon"], [3, 1, 1, "", "GeoPolygon"], [3, 1, 1, "", "LineString"], [3, 2, 1, "", "Location"]], "enflow.assets.geospatial.GeoLocation": [[3, 2, 1, "", "altitude"], [3, 3, 1, "", "from_point"], [3, 3, 1, "", "geometry_to_geojson"], [3, 2, 1, "", "latitude"], [3, 2, 1, "", "longitude"], [3, 2, 1, "", "name"], [3, 3, 1, "", "to_dataframe"], [3, 3, 1, "", "to_geojson"], [3, 3, 1, "", "to_json"], [3, 3, 1, "", "to_pvlib"], [3, 3, 1, "", "to_tuple"], [3, 4, 1, "", "tuple"], [3, 2, 1, "", "tz"]], "enflow.assets.geospatial.GeoMultiPolygon": [[3, 3, 1, "", "from_geojson"], [3, 4, 1, "", "geojson"], [3, 3, 1, "", "geometry_to_geojson"], [3, 2, 1, "", "multipolygon"], [3, 2, 1, "", "name"], [3, 3, 1, "", "to_dataframe"], [3, 3, 1, "", "to_geojson"], [3, 3, 1, "", "to_json"]], "enflow.assets.geospatial.GeoPolygon": [[3, 3, 1, "", "almost_equals"], [3, 4, 1, "", "area"], [3, 4, 1, "", "boundary"], [3, 4, 1, "", "bounds"], [3, 3, 1, "", "buffer"], [3, 4, 1, "", "centroid"], [3, 3, 1, "", "contains"], [3, 3, 1, "", "contains_properly"], [3, 4, 1, "", "convex_hull"], [3, 4, 1, "", "coords"], [3, 3, 1, "", "covered_by"], [3, 3, 1, "", "covers"], [3, 3, 1, "", "crosses"], [3, 3, 1, "", "difference"], [3, 3, 1, "", "disjoint"], [3, 3, 1, "", "distance"], [3, 3, 1, "", "dwithin"], [3, 4, 1, "", "envelope"], [3, 3, 1, "", "equals"], [3, 3, 1, "", "equals_exact"], [3, 4, 1, "", "exterior"], [3, 3, 1, "", "from_bounds"], [3, 4, 1, "", "geom_type"], [3, 3, 1, "", "geometryType"], [3, 3, 1, "", "geometry_to_geojson"], [3, 4, 1, "", "has_z"], [3, 3, 1, "", "hausdorff_distance"], [3, 4, 1, "", "interiors"], [3, 3, 1, "", "interpolate"], [3, 3, 1, "", "intersection"], [3, 3, 1, "", "intersects"], [3, 4, 1, "", "is_closed"], [3, 4, 1, "", "is_empty"], [3, 4, 1, "", "is_ring"], [3, 4, 1, "", "is_simple"], [3, 4, 1, "", "is_valid"], [3, 4, 1, "", "length"], [3, 3, 1, "", "line_interpolate_point"], [3, 3, 1, "", "line_locate_point"], [3, 4, 1, "", "minimum_clearance"], [3, 4, 1, "", "minimum_rotated_rectangle"], [3, 2, 1, "", "name"], [3, 3, 1, "", "normalize"], [3, 4, 1, "", "oriented_envelope"], [3, 3, 1, "", "overlaps"], [3, 3, 1, "", "point_on_surface"], [3, 3, 1, "", "project"], [3, 3, 1, "", "relate"], [3, 3, 1, "", "relate_pattern"], [3, 3, 1, "", "representative_point"], [3, 3, 1, "", "reverse"], [3, 3, 1, "", "segmentize"], [3, 3, 1, "", "simplify"], [3, 3, 1, "", "svg"], [3, 3, 1, "", "symmetric_difference"], [3, 3, 1, "", "to_dataframe"], [3, 3, 1, "", "to_geojson"], [3, 3, 1, "", "to_json"], [3, 3, 1, "", "touches"], [3, 4, 1, "", "type"], [3, 3, 1, "", "union"], [3, 3, 1, "", "within"], [3, 4, 1, "", "wkb"], [3, 4, 1, "", "wkb_hex"], [3, 4, 1, "", "wkt"], [3, 4, 1, "", "xy"]], "enflow.assets.geospatial.LineString": [[3, 3, 1, "", "almost_equals"], [3, 4, 1, "", "area"], [3, 4, 1, "", "boundary"], [3, 4, 1, "", "bounds"], [3, 3, 1, "", "buffer"], [3, 4, 1, "", "centroid"], [3, 3, 1, "", "contains"], [3, 3, 1, "", "contains_properly"], [3, 4, 1, "", "convex_hull"], [3, 4, 1, "", "coords"], [3, 3, 1, "", "covered_by"], [3, 3, 1, "", "covers"], [3, 3, 1, "", "crosses"], [3, 3, 1, "", "difference"], [3, 3, 1, "", "disjoint"], [3, 3, 1, "", "distance"], [3, 3, 1, "", "dwithin"], [3, 4, 1, "", "envelope"], [3, 3, 1, "", "equals"], [3, 3, 1, "", "equals_exact"], [3, 4, 1, "", "geom_type"], [3, 3, 1, "", "geometryType"], [3, 4, 1, "", "has_z"], [3, 3, 1, "", "hausdorff_distance"], [3, 3, 1, "", "interpolate"], [3, 3, 1, "", "intersection"], [3, 3, 1, "", "intersects"], [3, 4, 1, "", "is_closed"], [3, 4, 1, "", "is_empty"], [3, 4, 1, "", "is_ring"], [3, 4, 1, "", "is_simple"], [3, 4, 1, "", "is_valid"], [3, 4, 1, "", "length"], [3, 3, 1, "", "line_interpolate_point"], [3, 3, 1, "", "line_locate_point"], [3, 4, 1, "", "minimum_clearance"], [3, 4, 1, "", "minimum_rotated_rectangle"], [3, 3, 1, "", "normalize"], [3, 3, 1, "", "offset_curve"], [3, 4, 1, "", "oriented_envelope"], [3, 3, 1, "", "overlaps"], [3, 3, 1, "", "parallel_offset"], [3, 3, 1, "", "point_on_surface"], [3, 3, 1, "", "project"], [3, 3, 1, "", "relate"], [3, 3, 1, "", "relate_pattern"], [3, 3, 1, "", "representative_point"], [3, 3, 1, "", "reverse"], [3, 3, 1, "", "segmentize"], [3, 3, 1, "", "simplify"], [3, 3, 1, "", "svg"], [3, 3, 1, "", "symmetric_difference"], [3, 3, 1, "", "touches"], [3, 4, 1, "", "type"], [3, 3, 1, "", "union"], [3, 3, 1, "", "within"], [3, 4, 1, "", "wkb"], [3, 4, 1, "", "wkb_hex"], [3, 4, 1, "", "wkt"], [3, 4, 1, "", "xy"]], "enflow.assets.heatpump": [[4, 1, 1, "", "HeatPump"]], "enflow.assets.heatpump.HeatPump": [[4, 2, 1, "", "altitude"], [4, 2, 1, "", "capacity"], [4, 2, 1, "", "cop"], [4, 2, 1, "", "energy_source"], [4, 3, 1, "", "geometry_to_geojson"], [4, 3, 1, "", "get_location"], [4, 2, 1, "", "latitude"], [4, 2, 1, "", "location"], [4, 2, 1, "", "longitude"], [4, 2, 1, "", "name"], [4, 3, 1, "", "plot_timeseries"], [4, 2, 1, "", "timeseries"], [4, 3, 1, "", "to_dataframe"], [4, 3, 1, "", "to_geojson"], [4, 3, 1, "", "to_json"], [4, 2, 1, "", "tz"]], "enflow.assets.hydro": [[5, 1, 1, "", "HydroPowerPlant"], [5, 1, 1, "", "HydroTurbine"], [5, 1, 1, "", "Reservoir"]], "enflow.assets.hydro.HydroPowerPlant": [[5, 2, 1, "", "annual_output"], [5, 2, 1, "", "capacity"], [5, 2, 1, "", "environmental_impact"], [5, 2, 1, "", "location"], [5, 2, 1, "", "maintenance_schedule"], [5, 2, 1, "", "operational_since"], [5, 2, 1, "", "reservoir_capacity"], [5, 2, 1, "", "river"], [5, 2, 1, "", "turbine_type"]], "enflow.assets.hydro.HydroTurbine": [[5, 2, 1, "", "capacity"], [5, 2, 1, "", "efficiency"], [5, 2, 1, "", "operational_since"], [5, 2, 1, "", "turbine_type"]], "enflow.assets.hydro.Reservoir": [[5, 2, 1, "", "average_depth"], [5, 2, 1, "", "capacity"], [5, 2, 1, "", "location"], [5, 2, 1, "", "surface_area"]], "enflow.assets.powergrid": [[6, 1, 1, "", "HydroPowerPlant"], [6, 1, 1, "", "HydroTurbine"], [6, 1, 1, "", "Reservoir"]], "enflow.assets.powergrid.HydroPowerPlant": [[6, 2, 1, "", "annual_output"], [6, 2, 1, "", "capacity"], [6, 2, 1, "", "environmental_impact"], [6, 2, 1, "", "location"], [6, 2, 1, "", "maintenance_schedule"], [6, 2, 1, "", "operational_since"], [6, 2, 1, "", "reservoir_capacity"], [6, 2, 1, "", "river"], [6, 2, 1, "", "turbine_type"]], "enflow.assets.powergrid.HydroTurbine": [[6, 2, 1, "", "capacity"], [6, 2, 1, "", "efficiency"], [6, 2, 1, "", "operational_since"], [6, 2, 1, "", "turbine_type"]], "enflow.assets.powergrid.Reservoir": [[6, 2, 1, "", "average_depth"], [6, 2, 1, "", "capacity"], [6, 2, 1, "", "location"], [6, 2, 1, "", "surface_area"]], "enflow.assets.solar": [[7, 1, 1, "", "FixedMount"], [7, 1, 1, "", "PVArray"], [7, 1, 1, "", "PVSystem"], [7, 1, 1, "", "SingleAxisTrackerMount"], [7, 1, 1, "", "SolarPowerArea"]], "enflow.assets.solar.FixedMount": [[7, 2, 1, "", "surface_azimuth"], [7, 2, 1, "", "surface_tilt"]], "enflow.assets.solar.PVArray": [[7, 2, 1, "", "altitude"], [7, 2, 1, "", "capacity"], [7, 2, 1, "", "efficiency"], [7, 3, 1, "", "geometry_to_geojson"], [7, 3, 1, "", "get_location"], [7, 3, 1, "", "get_timeseries"], [7, 2, 1, "", "latitude"], [7, 2, 1, "", "location"], [7, 2, 1, "", "longitude"], [7, 2, 1, "", "module"], [7, 2, 1, "", "module_parameters"], [7, 2, 1, "", "module_type"], [7, 2, 1, "", "name"], [7, 3, 1, "", "plot_timeseries"], [7, 2, 1, "", "surface_area"], [7, 2, 1, "", "surface_azimuth"], [7, 2, 1, "", "surface_tilt"], [7, 2, 1, "", "temperature_model_parameters"], [7, 2, 1, "", "timeseries"], [7, 3, 1, "", "to_dataframe"], [7, 3, 1, "", "to_geojson"], [7, 3, 1, "", "to_json"], [7, 2, 1, "", "tz"]], "enflow.assets.solar.PVSystem": [[7, 2, 1, "", "albedo"], [7, 2, 1, "", "altitude"], [7, 2, 1, "", "capacity"], [7, 3, 1, "", "geometry_to_geojson"], [7, 3, 1, "", "get_location"], [7, 2, 1, "", "inverter_parameters"], [7, 2, 1, "", "latitude"], [7, 2, 1, "", "location"], [7, 2, 1, "", "longitude"], [7, 2, 1, "", "module_parameters"], [7, 2, 1, "", "module_type"], [7, 2, 1, "", "name"], [7, 3, 1, "", "plot_timeseries"], [7, 2, 1, "", "pv_arrays"], [7, 2, 1, "", "racking_model"], [7, 2, 1, "", "surface_azimuth"], [7, 2, 1, "", "surface_tilt"], [7, 2, 1, "", "surface_type"], [7, 2, 1, "", "timeseries"], [7, 3, 1, "", "to_dataframe"], [7, 3, 1, "", "to_geojson"], [7, 3, 1, "", "to_json"], [7, 3, 1, "", "to_pvlib"], [7, 2, 1, "", "tz"]], "enflow.assets.solar.SingleAxisTrackerMount": [[7, 2, 1, "", "axis_azimuth"], [7, 2, 1, "", "axis_tilt"], [7, 2, 1, "", "backtrack"], [7, 2, 1, "", "cross_axis_tilt"], [7, 2, 1, "", "gcr"], [7, 2, 1, "", "max_angle"], [7, 2, 1, "", "module_height"], [7, 2, 1, "", "racking_model"]], "enflow.assets.solar.SolarPowerArea": [[7, 2, 1, "", "altitude"], [7, 2, 1, "", "capacity"], [7, 4, 1, "", "geojson"], [7, 3, 1, "", "geometry_to_geojson"], [7, 2, 1, "", "geopolygon"], [7, 3, 1, "", "get_location"], [7, 2, 1, "", "latitude"], [7, 2, 1, "", "location"], [7, 2, 1, "", "longitude"], [7, 2, 1, "", "name"], [7, 3, 1, "", "plot_timeseries"], [7, 2, 1, "", "timeseries"], [7, 3, 1, "", "to_dataframe"], [7, 3, 1, "", "to_geojson"], [7, 3, 1, "", "to_json"], [7, 2, 1, "", "tz"]], "enflow.assets.timeseries": [[8, 2, 1, "", "ElectricityAreaConsumption"], [8, 1, 1, "", "ElectricityAreaDemand"], [8, 2, 1, "", "ElectricityAreaProduction"], [8, 1, 1, "", "ElectricityAreaSupply"], [8, 2, 1, "", "ElectricityConsumption"], [8, 1, 1, "", "ElectricityDemand"], [8, 2, 1, "", "ElectricityProduction"], [8, 1, 1, "", "ElectricitySupply"], [8, 1, 1, "", "HeatingAreaDemand"], [8, 2, 1, "", "HeatingConsumption"], [8, 1, 1, "", "HeatingDemand"]], "enflow.assets.timeseries.ElectricityAreaDemand": [[8, 2, 1, "", "area"], [8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enflow.assets.timeseries.ElectricityAreaSupply": [[8, 2, 1, "", "area"], [8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enflow.assets.timeseries.ElectricityDemand": [[8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "location"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enflow.assets.timeseries.ElectricitySupply": [[8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "location"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enflow.assets.timeseries.HeatingAreaDemand": [[8, 2, 1, "", "area"], [8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enflow.assets.timeseries.HeatingDemand": [[8, 2, 1, "", "column_names"], [8, 2, 1, "", "df"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "geometry_to_geojson"], [8, 3, 1, "", "get_data"], [8, 2, 1, "", "location"], [8, 2, 1, "", "name"], [8, 3, 1, "", "plot"], [8, 3, 1, "", "to_dataframe"], [8, 3, 1, "", "to_geojson"], [8, 3, 1, "", "to_json"]], "enflow.assets.wind": [[9, 1, 1, "", "WindFarm"], [9, 1, 1, "", "WindPowerArea"], [9, 1, 1, "", "WindTurbine"]], "enflow.assets.wind.WindFarm": [[9, 2, 1, "", "altitude"], [9, 2, 1, "", "capacity"], [9, 2, 1, "", "farm_efficiency"], [9, 3, 1, "", "geometry_to_geojson"], [9, 3, 1, "", "get_location"], [9, 2, 1, "", "latitude"], [9, 2, 1, "", "location"], [9, 2, 1, "", "longitude"], [9, 2, 1, "", "name"], [9, 3, 1, "", "plot_timeseries"], [9, 2, 1, "", "timeseries"], [9, 3, 1, "", "to_dataframe"], [9, 3, 1, "", "to_geojson"], [9, 3, 1, "", "to_json"], [9, 2, 1, "", "tz"], [9, 2, 1, "", "wind_turbines"]], "enflow.assets.wind.WindPowerArea": [[9, 2, 1, "", "area"], [9, 2, 1, "", "capacity"], [9, 2, 1, "", "farm_efficiency"], [9, 2, 1, "", "geopolygon"], [9, 2, 1, "", "wind_turbines"]], "enflow.assets.wind.WindTurbine": [[9, 2, 1, "", "altitude"], [9, 2, 1, "", "capacity"], [9, 3, 1, "", "create_table_representation"], [9, 3, 1, "", "geometry_to_geojson"], [9, 3, 1, "", "get_location"], [9, 2, 1, "", "hub_height"], [9, 2, 1, "", "latitude"], [9, 2, 1, "", "location"], [9, 2, 1, "", "longitude"], [9, 2, 1, "", "name"], [9, 3, 1, "", "plot_timeseries"], [9, 2, 1, "", "power_coefficient_curve"], [9, 2, 1, "", "power_curve"], [9, 2, 1, "", "rotor_diameter"], [9, 2, 1, "", "timeseries"], [9, 3, 1, "", "to_dataframe"], [9, 3, 1, "", "to_geojson"], [9, 3, 1, "", "to_json"], [9, 2, 1, "", "turbine_model"], [9, 2, 1, "", "tz"]], "enflow.experiments": [[11, 0, 0, "-", "experiment"]], "enflow.experiments.experiment": [[11, 1, 1, "", "Experiment"]], "enflow.experiments.experiment.Experiment": [[11, 3, 1, "", "run"]], "enflow.models": [[15, 0, 0, "-", "agent"], [16, 0, 0, "-", "optimizer"], [17, 0, 0, "-", "predictor"], [18, 0, 0, "-", "simulator"]], "enflow.models.agent": [[15, 1, 1, "", "Agent"]], "enflow.models.agent.Agent": [[15, 3, 1, "", "act"], [15, 3, 1, "", "learn"]], "enflow.models.optimizer": [[16, 1, 1, "", "Optimizer"]], "enflow.models.optimizer.Optimizer": [[16, 3, 1, "", "optimize"]], "enflow.models.predictor": [[17, 1, 1, "", "Predictor"]], "enflow.models.predictor.Predictor": [[17, 3, 1, "", "copy"], [17, 3, 1, "", "create_features"], [17, 3, 1, "", "load_data"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "train"]], "enflow.models.simulator": [[18, 1, 1, "", "Simulator"]], "enflow.models.simulator.Simulator": [[18, 3, 1, "", "reset"], [18, 3, 1, "", "step"]], "enflow.problems": [[22, 0, 0, "-", "dataset"]], "enflow.problems.dataset": [[22, 1, 1, "", "Dataset"]], "enflow.problems.dataset.Dataset": [[22, 2, 1, "", "collection"], [22, 2, 1, "", "data"], [22, 2, 1, "", "description"], [22, 4, 1, "", "list_data"], [22, 2, 1, "", "name"]], "enflow.spaces": [[25, 0, 0, "-", "base"], [26, 0, 0, "-", "input"], [27, 0, 0, "-", "output"]], "enflow.spaces.base": [[25, 1, 1, "", "BaseSpace"]], "enflow.spaces.base.BaseSpace": [[25, 3, 1, "", "from_array"], [25, 3, 1, "", "from_tuple"], [25, 3, 1, "", "to_array"], [25, 3, 1, "", "to_tuple"], [25, 4, 1, "", "tuple"], [25, 4, 1, "", "vector"]], "enflow.spaces.input": [[26, 1, 1, "", "InputSpace"], [26, 2, 1, "", "StateSpace"]], "enflow.spaces.output": [[27, 2, 1, "", "ActionSpace"], [27, 1, 1, "", "OutputSpace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pv": [], "asset": [13, 28], "wind": 9, "emflow": [], "open": 13, "sourc": 13, "energi": [2, 13, 20, 28], "model": 13, "framework": [13, 28], "introduct": [13, 14], "walkthrough": [13, 28], "problem": 13, "space": [13, 25, 26, 27], "runner": [], "notebook": 13, "exampl": [3, 13, 19], "indic": 13, "tabl": 13, "purpos": 14, "featur": 14, "instal": 14, "contribut": 14, "support": 14, "contact": 14, "agent": [15, 20, 28], "class": [15, 16, 17, 18, 19], "optim": 16, "predictor": [17, 20], "simul": [18, 28], "gefcom2024": 19, "solar": [7, 19], "load": [19, 20], "gefcom2014": 19, "data": [19, 20], "creat": [19, 20, 28], "check": 21, "dataset": 22, "environ": [20, 23, 28], "object": [20, 24, 28], "benchmark": 10, "experi": [11, 13], "scenario": 12, "base": [0, 25], "input": 26, "output": 27, "step": 28, "1": 28, "defin": 28, "your": 28, "2": 28, "specifi": 28, "dynam": 28, "state": 28, "variabl": 28, "3": 28, "action": 28, "4": 28, "5": 28, "establish": 28, "function": 28, "6": 28, "design": 28, "polici": 28, "7": 28, "run": [20, 28], "conclus": 28, "plot": 20, "system": [2, 20], "batteri": 1, "geospati": 3, "paramet": 3, "return": 3, "note": 3, "see": 3, "also": 3, "heatpump": 4, "hydro": 5, "power": 6, "grid": 6, "timeseri": 8, "backtest": 20, "valid": 20, "set": 20, "heftcom2024": 20, "enflow": [13, 28]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"enflow: Open-source energy modelling framework": [[13, "enflow-open-source-energy-modelling-framework"]], "\u25b6\ufe0f Introduction": [[13, null]], "\ud83e\ude9c Walkthrough": [[13, null]], "\ud83d\udcdd Notebook Examples": [[13, null]], "\ud83d\udd0b Energy Assets": [[13, null]], "\ud83e\udde9 Energy Problems": [[13, null]], "\ud83d\udce6 Spaces": [[13, null]], "\ud83e\udd16 Energy Models": [[13, null]], "\u267b\ufe0f Experiments": [[13, null]], "Indices and tables": [[13, "indices-and-tables"]], "Introduction": [[14, "introduction"]], "Purpose": [[14, "purpose"]], "Features": [[14, "features"]], "Installation": [[14, "installation"]], "Contributing": [[14, "contributing"]], "Support and Contact": [[14, "support-and-contact"]], "GEFCom2024 Solar Example": [[19, "GEFCom2024-Solar-Example"]], "Load GEFCom2014 solar data": [[19, "Load-GEFCom2014-solar-data"]], "Create data classes": [[19, "Create-data-classes"]], "HEFTCom2024": [[20, "HEFTCom2024"]], "Load data": [[20, "Load-data"]], "Create and plot energy system": [[20, "Create-and-plot-energy-system"]], "Create Environment": [[20, "Create-Environment"]], "Create Objective": [[20, "Create-Objective"]], "Create Predictor": [[20, "Create-Predictor"]], "Create Agent": [[20, "Create-Agent"]], "Run in backtest on validation set": [[20, "Run-in-backtest-on-validation-set"]], "Walkthrough of the enflow framework": [[28, "walkthrough-of-the-enflow-framework"]], "Step 1: Define Your Energy Assets": [[28, "step-1-define-your-energy-assets"]], "Step 2: Specify Dynamic State Variables": [[28, "step-2-specify-dynamic-state-variables"]], "Step 3: Define Action Variables": [[28, "step-3-define-action-variables"]], "Step 4: Create the Environment": [[28, "step-4-create-the-environment"]], "Step 5: Establish the Objective Function": [[28, "step-5-establish-the-objective-function"]], "Step 6: Design Agents\u2019 Policies": [[28, "step-6-design-agents-policies"]], "Step 7: Run the Simulated Environment": [[28, "step-7-run-the-simulated-environment"]], "Conclusion": [[28, "conclusion"]], "Base": [[0, "module-enflow.assets.base"]], "Battery": [[1, "module-enflow.assets.battery"]], "Energy System": [[2, "energy-system"]], "Geospatial": [[3, "module-enflow.assets.geospatial"]], "Parameters": [[3, "parameters"], [3, "id1"], [3, "id3"], [3, "id8"], [3, "id13"], [3, "id17"], [3, "id23"], [3, "id29"], [3, "id31"]], "Examples": [[3, "examples"], [3, "id2"], [3, "id5"], [3, "id6"], [3, "id9"], [3, "id11"], [3, "id12"], [3, "id14"], [3, "id15"], [3, "id20"], [3, "id21"], [3, "id24"], [3, "id26"], [3, "id28"], [3, "id30"]], "Returns": [[3, "returns"], [3, "id4"], [3, "id7"], [3, "id10"], [3, "id16"], [3, "id18"], [3, "id22"], [3, "id25"]], "Notes": [[3, "notes"], [3, "id19"]], "See also": [[3, "see-also"], [3, "id27"]], "Heatpump": [[4, "module-enflow.assets.heatpump"]], "Hydro": [[5, "module-enflow.assets.hydro"]], "Power Grid": [[6, "module-enflow.assets.powergrid"]], "Solar": [[7, "module-enflow.assets.solar"]], "Timeseries": [[8, "module-enflow.assets.timeseries"]], "Wind": [[9, "module-enflow.assets.wind"]], "Benchmark": [[10, "benchmark"]], "Experiment": [[11, "module-enflow.experiments.experiment"]], "Scenarios": [[12, "scenarios"]], "Agent Class": [[15, "module-enflow.models.agent"]], "Optimizer Class": [[16, "optimizer-class"]], "Predictor Class": [[17, "predictor-class"]], "Simulator Class": [[18, "simulator-class"]], "Checks": [[21, "checks"]], "Dataset": [[22, "module-enflow.problems.dataset"]], "Environments": [[23, "environments"]], "Objectives": [[24, "objectives"]], "Base Space": [[25, "module-enflow.spaces.base"]], "Input Space": [[26, "module-enflow.spaces.input"]], "Output Space": [[27, "module-enflow.spaces.output"]]}, "indexentries": {"energyasset (class in enflow.assets.base)": [[0, "enflow.assets.base.EnergyAsset"]], "energycollection (class in enflow.assets.base)": [[0, "enflow.assets.base.EnergyCollection"]], "sensor (class in enflow.assets.base)": [[0, "enflow.assets.base.Sensor"]], "timeseries (class in enflow.assets.base)": [[0, "enflow.assets.base.TimeSeries"]], "add_assets() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.add_assets"]], "add_collection() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.add_collection"]], "altitude (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.altitude"]], "assets (enflow.assets.base.energycollection attribute)": [[0, "enflow.assets.base.EnergyCollection.assets"]], "collections (enflow.assets.base.energycollection attribute)": [[0, "enflow.assets.base.EnergyCollection.collections"]], "column_names (enflow.assets.base.timeseries attribute)": [[0, "enflow.assets.base.TimeSeries.column_names"]], "df (enflow.assets.base.timeseries attribute)": [[0, "enflow.assets.base.TimeSeries.df"]], "enflow.assets.base": [[0, "module-enflow.assets.base"]], "filename (enflow.assets.base.timeseries attribute)": [[0, "enflow.assets.base.TimeSeries.filename"]], "geometry_to_geojson() (enflow.assets.base.energyasset method)": [[0, "enflow.assets.base.EnergyAsset.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.base.sensor method)": [[0, "enflow.assets.base.Sensor.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.base.timeseries method)": [[0, "enflow.assets.base.TimeSeries.geometry_to_geojson"]], "get_asset_by_name() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.get_asset_by_name"]], "get_data() (enflow.assets.base.timeseries method)": [[0, "enflow.assets.base.TimeSeries.get_data"]], "get_location() (enflow.assets.base.energyasset method)": [[0, "enflow.assets.base.EnergyAsset.get_location"]], "latitude (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.latitude"]], "list_assets() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.list_assets"]], "list_collections() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.list_collections"]], "location (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.location"]], "location (enflow.assets.base.sensor attribute)": [[0, "enflow.assets.base.Sensor.location"]], "longitude (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.longitude"]], "module": [[0, "module-enflow.assets.base"], [1, "module-enflow.assets.battery"], [3, "module-enflow.assets.geospatial"], [4, "module-enflow.assets.heatpump"], [5, "module-enflow.assets.hydro"], [6, "module-enflow.assets.powergrid"], [7, "module-enflow.assets.solar"], [8, "module-enflow.assets.timeseries"], [9, "module-enflow.assets.wind"], [11, "module-enflow.experiments.experiment"], [15, "module-enflow.models.agent"], [16, "module-enflow.models.optimizer"], [17, "module-enflow.models.predictor"], [18, "module-enflow.models.simulator"], [22, "module-enflow.problems.dataset"], [25, "module-enflow.spaces.base"], [26, "module-enflow.spaces.input"], [27, "module-enflow.spaces.output"]], "name (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.name"]], "name (enflow.assets.base.energycollection attribute)": [[0, "enflow.assets.base.EnergyCollection.name"]], "name (enflow.assets.base.sensor attribute)": [[0, "enflow.assets.base.Sensor.name"]], "name (enflow.assets.base.timeseries attribute)": [[0, "enflow.assets.base.TimeSeries.name"]], "plot() (enflow.assets.base.timeseries method)": [[0, "enflow.assets.base.TimeSeries.plot"]], "plot_timeseries() (enflow.assets.base.energyasset method)": [[0, "enflow.assets.base.EnergyAsset.plot_timeseries"]], "remove_asset() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.remove_asset"]], "remove_collection() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.remove_collection"]], "timeseries (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.timeseries"]], "to_dataframe() (enflow.assets.base.energyasset method)": [[0, "enflow.assets.base.EnergyAsset.to_dataframe"]], "to_dataframe() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.to_dataframe"]], "to_dataframe() (enflow.assets.base.sensor method)": [[0, "enflow.assets.base.Sensor.to_dataframe"]], "to_dataframe() (enflow.assets.base.timeseries method)": [[0, "enflow.assets.base.TimeSeries.to_dataframe"]], "to_geojson() (enflow.assets.base.energyasset method)": [[0, "enflow.assets.base.EnergyAsset.to_geojson"]], "to_geojson() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.to_geojson"]], "to_geojson() (enflow.assets.base.sensor method)": [[0, "enflow.assets.base.Sensor.to_geojson"]], "to_geojson() (enflow.assets.base.timeseries method)": [[0, "enflow.assets.base.TimeSeries.to_geojson"]], "to_json() (enflow.assets.base.energyasset method)": [[0, "enflow.assets.base.EnergyAsset.to_json"]], "to_json() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.to_json"]], "to_json() (enflow.assets.base.sensor method)": [[0, "enflow.assets.base.Sensor.to_json"]], "to_json() (enflow.assets.base.timeseries method)": [[0, "enflow.assets.base.TimeSeries.to_json"]], "to_tree() (enflow.assets.base.energycollection method)": [[0, "enflow.assets.base.EnergyCollection.to_tree"]], "tz (enflow.assets.base.energyasset attribute)": [[0, "enflow.assets.base.EnergyAsset.tz"]], "battery (class in enflow.assets.battery)": [[1, "enflow.assets.battery.Battery"]], "altitude (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.altitude"]], "charge_efficiency (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.charge_efficiency"]], "discharge_efficiency (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.discharge_efficiency"]], "enflow.assets.battery": [[1, "module-enflow.assets.battery"]], "geometry_to_geojson() (enflow.assets.battery.battery method)": [[1, "enflow.assets.battery.Battery.geometry_to_geojson"]], "get_location() (enflow.assets.battery.battery method)": [[1, "enflow.assets.battery.Battery.get_location"]], "latitude (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.latitude"]], "location (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.location"]], "longitude (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.longitude"]], "max_charge (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.max_charge"]], "max_discharge (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.max_discharge"]], "min_soc (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.min_soc"]], "name (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.name"]], "plot_timeseries() (enflow.assets.battery.battery method)": [[1, "enflow.assets.battery.Battery.plot_timeseries"]], "storage_capacity (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.storage_capacity"]], "timeseries (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.timeseries"]], "to_dataframe() (enflow.assets.battery.battery method)": [[1, "enflow.assets.battery.Battery.to_dataframe"]], "to_geojson() (enflow.assets.battery.battery method)": [[1, "enflow.assets.battery.Battery.to_geojson"]], "to_json() (enflow.assets.battery.battery method)": [[1, "enflow.assets.battery.Battery.to_json"]], "tz (enflow.assets.battery.battery attribute)": [[1, "enflow.assets.battery.Battery.tz"]], "geolocation (class in enflow.assets.geospatial)": [[3, "enflow.assets.geospatial.GeoLocation"]], "geomultipolygon (class in enflow.assets.geospatial)": [[3, "enflow.assets.geospatial.GeoMultiPolygon"]], "geopolygon (class in enflow.assets.geospatial)": [[3, "enflow.assets.geospatial.GeoPolygon"]], "linestring (class in enflow.assets.geospatial)": [[3, "enflow.assets.geospatial.LineString"]], "location (in module enflow.assets.geospatial)": [[3, "enflow.assets.geospatial.Location"]], "almost_equals() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.almost_equals"]], "almost_equals() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.almost_equals"]], "altitude (enflow.assets.geospatial.geolocation attribute)": [[3, "enflow.assets.geospatial.GeoLocation.altitude"]], "area (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.area"]], "area (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.area"]], "boundary (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.boundary"]], "boundary (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.boundary"]], "bounds (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.bounds"]], "bounds (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.bounds"]], "buffer() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.buffer"]], "buffer() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.buffer"]], "centroid (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.centroid"]], "centroid (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.centroid"]], "contains() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.contains"]], "contains() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.contains"]], "contains_properly() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.contains_properly"]], "contains_properly() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.contains_properly"]], "convex_hull (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.convex_hull"]], "convex_hull (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.convex_hull"]], "coords (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.coords"]], "coords (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.coords"]], "covered_by() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.covered_by"]], "covered_by() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.covered_by"]], "covers() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.covers"]], "covers() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.covers"]], "crosses() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.crosses"]], "crosses() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.crosses"]], "difference() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.difference"]], "difference() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.difference"]], "disjoint() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.disjoint"]], "disjoint() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.disjoint"]], "distance() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.distance"]], "distance() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.distance"]], "dwithin() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.dwithin"]], "dwithin() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.dwithin"]], "enflow.assets.geospatial": [[3, "module-enflow.assets.geospatial"]], "envelope (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.envelope"]], "envelope (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.envelope"]], "equals() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.equals"]], "equals() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.equals"]], "equals_exact() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.equals_exact"]], "equals_exact() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.equals_exact"]], "exterior (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.exterior"]], "from_bounds() (enflow.assets.geospatial.geopolygon class method)": [[3, "enflow.assets.geospatial.GeoPolygon.from_bounds"]], "from_geojson() (enflow.assets.geospatial.geomultipolygon class method)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.from_geojson"]], "from_point() (enflow.assets.geospatial.geolocation class method)": [[3, "enflow.assets.geospatial.GeoLocation.from_point"]], "geojson (enflow.assets.geospatial.geomultipolygon property)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.geojson"]], "geom_type (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.geom_type"]], "geom_type (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.geom_type"]], "geometrytype() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.geometryType"]], "geometrytype() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.geometryType"]], "geometry_to_geojson() (enflow.assets.geospatial.geolocation method)": [[3, "enflow.assets.geospatial.GeoLocation.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.geospatial.geomultipolygon method)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.geometry_to_geojson"]], "has_z (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.has_z"]], "has_z (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.has_z"]], "hausdorff_distance() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.hausdorff_distance"]], "hausdorff_distance() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.hausdorff_distance"]], "interiors (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.interiors"]], "interpolate() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.interpolate"]], "interpolate() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.interpolate"]], "intersection() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.intersection"]], "intersection() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.intersection"]], "intersects() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.intersects"]], "intersects() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.intersects"]], "is_closed (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.is_closed"]], "is_closed (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.is_closed"]], "is_empty (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.is_empty"]], "is_empty (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.is_empty"]], "is_ring (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.is_ring"]], "is_ring (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.is_ring"]], "is_simple (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.is_simple"]], "is_simple (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.is_simple"]], "is_valid (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.is_valid"]], "is_valid (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.is_valid"]], "latitude (enflow.assets.geospatial.geolocation attribute)": [[3, "enflow.assets.geospatial.GeoLocation.latitude"]], "length (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.length"]], "length (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.length"]], "line_interpolate_point() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.line_interpolate_point"]], "line_interpolate_point() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.line_interpolate_point"]], "line_locate_point() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.line_locate_point"]], "line_locate_point() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.line_locate_point"]], "longitude (enflow.assets.geospatial.geolocation attribute)": [[3, "enflow.assets.geospatial.GeoLocation.longitude"]], "minimum_clearance (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.minimum_clearance"]], "minimum_clearance (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.minimum_clearance"]], "minimum_rotated_rectangle (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.minimum_rotated_rectangle"]], "minimum_rotated_rectangle (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.minimum_rotated_rectangle"]], "multipolygon (enflow.assets.geospatial.geomultipolygon attribute)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.multipolygon"]], "name (enflow.assets.geospatial.geolocation attribute)": [[3, "enflow.assets.geospatial.GeoLocation.name"]], "name (enflow.assets.geospatial.geomultipolygon attribute)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.name"]], "name (enflow.assets.geospatial.geopolygon attribute)": [[3, "enflow.assets.geospatial.GeoPolygon.name"]], "normalize() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.normalize"]], "normalize() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.normalize"]], "offset_curve() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.offset_curve"]], "oriented_envelope (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.oriented_envelope"]], "oriented_envelope (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.oriented_envelope"]], "overlaps() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.overlaps"]], "overlaps() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.overlaps"]], "parallel_offset() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.parallel_offset"]], "point_on_surface() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.point_on_surface"]], "point_on_surface() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.point_on_surface"]], "project() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.project"]], "project() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.project"]], "relate() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.relate"]], "relate() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.relate"]], "relate_pattern() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.relate_pattern"]], "relate_pattern() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.relate_pattern"]], "representative_point() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.representative_point"]], "representative_point() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.representative_point"]], "reverse() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.reverse"]], "reverse() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.reverse"]], "segmentize() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.segmentize"]], "segmentize() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.segmentize"]], "simplify() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.simplify"]], "simplify() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.simplify"]], "svg() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.svg"]], "svg() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.svg"]], "symmetric_difference() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.symmetric_difference"]], "symmetric_difference() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.symmetric_difference"]], "to_dataframe() (enflow.assets.geospatial.geolocation method)": [[3, "enflow.assets.geospatial.GeoLocation.to_dataframe"]], "to_dataframe() (enflow.assets.geospatial.geomultipolygon method)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.to_dataframe"]], "to_dataframe() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.to_dataframe"]], "to_geojson() (enflow.assets.geospatial.geolocation method)": [[3, "enflow.assets.geospatial.GeoLocation.to_geojson"]], "to_geojson() (enflow.assets.geospatial.geomultipolygon method)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.to_geojson"]], "to_geojson() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.to_geojson"]], "to_json() (enflow.assets.geospatial.geolocation method)": [[3, "enflow.assets.geospatial.GeoLocation.to_json"]], "to_json() (enflow.assets.geospatial.geomultipolygon method)": [[3, "enflow.assets.geospatial.GeoMultiPolygon.to_json"]], "to_json() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.to_json"]], "to_pvlib() (enflow.assets.geospatial.geolocation method)": [[3, "enflow.assets.geospatial.GeoLocation.to_pvlib"]], "to_tuple() (enflow.assets.geospatial.geolocation method)": [[3, "enflow.assets.geospatial.GeoLocation.to_tuple"]], "touches() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.touches"]], "touches() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.touches"]], "tuple (enflow.assets.geospatial.geolocation property)": [[3, "enflow.assets.geospatial.GeoLocation.tuple"]], "type (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.type"]], "type (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.type"]], "tz (enflow.assets.geospatial.geolocation attribute)": [[3, "enflow.assets.geospatial.GeoLocation.tz"]], "union() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.union"]], "union() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.union"]], "within() (enflow.assets.geospatial.geopolygon method)": [[3, "enflow.assets.geospatial.GeoPolygon.within"]], "within() (enflow.assets.geospatial.linestring method)": [[3, "enflow.assets.geospatial.LineString.within"]], "wkb (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.wkb"]], "wkb (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.wkb"]], "wkb_hex (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.wkb_hex"]], "wkb_hex (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.wkb_hex"]], "wkt (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.wkt"]], "wkt (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.wkt"]], "xy (enflow.assets.geospatial.geopolygon property)": [[3, "enflow.assets.geospatial.GeoPolygon.xy"]], "xy (enflow.assets.geospatial.linestring property)": [[3, "enflow.assets.geospatial.LineString.xy"]], "heatpump (class in enflow.assets.heatpump)": [[4, "enflow.assets.heatpump.HeatPump"]], "altitude (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.altitude"]], "capacity (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.capacity"]], "cop (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.cop"]], "energy_source (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.energy_source"]], "enflow.assets.heatpump": [[4, "module-enflow.assets.heatpump"]], "geometry_to_geojson() (enflow.assets.heatpump.heatpump method)": [[4, "enflow.assets.heatpump.HeatPump.geometry_to_geojson"]], "get_location() (enflow.assets.heatpump.heatpump method)": [[4, "enflow.assets.heatpump.HeatPump.get_location"]], "latitude (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.latitude"]], "location (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.location"]], "longitude (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.longitude"]], "name (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.name"]], "plot_timeseries() (enflow.assets.heatpump.heatpump method)": [[4, "enflow.assets.heatpump.HeatPump.plot_timeseries"]], "timeseries (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.timeseries"]], "to_dataframe() (enflow.assets.heatpump.heatpump method)": [[4, "enflow.assets.heatpump.HeatPump.to_dataframe"]], "to_geojson() (enflow.assets.heatpump.heatpump method)": [[4, "enflow.assets.heatpump.HeatPump.to_geojson"]], "to_json() (enflow.assets.heatpump.heatpump method)": [[4, "enflow.assets.heatpump.HeatPump.to_json"]], "tz (enflow.assets.heatpump.heatpump attribute)": [[4, "enflow.assets.heatpump.HeatPump.tz"]], "hydropowerplant (class in enflow.assets.hydro)": [[5, "enflow.assets.hydro.HydroPowerPlant"]], "hydroturbine (class in enflow.assets.hydro)": [[5, "enflow.assets.hydro.HydroTurbine"]], "reservoir (class in enflow.assets.hydro)": [[5, "enflow.assets.hydro.Reservoir"]], "annual_output (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.annual_output"]], "average_depth (enflow.assets.hydro.reservoir attribute)": [[5, "enflow.assets.hydro.Reservoir.average_depth"]], "capacity (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.capacity"]], "capacity (enflow.assets.hydro.hydroturbine attribute)": [[5, "enflow.assets.hydro.HydroTurbine.capacity"]], "capacity (enflow.assets.hydro.reservoir attribute)": [[5, "enflow.assets.hydro.Reservoir.capacity"]], "efficiency (enflow.assets.hydro.hydroturbine attribute)": [[5, "enflow.assets.hydro.HydroTurbine.efficiency"]], "enflow.assets.hydro": [[5, "module-enflow.assets.hydro"]], "environmental_impact (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.environmental_impact"]], "location (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.location"]], "location (enflow.assets.hydro.reservoir attribute)": [[5, "enflow.assets.hydro.Reservoir.location"]], "maintenance_schedule (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.maintenance_schedule"]], "operational_since (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.operational_since"]], "operational_since (enflow.assets.hydro.hydroturbine attribute)": [[5, "enflow.assets.hydro.HydroTurbine.operational_since"]], "reservoir_capacity (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.reservoir_capacity"]], "river (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.river"]], "surface_area (enflow.assets.hydro.reservoir attribute)": [[5, "enflow.assets.hydro.Reservoir.surface_area"]], "turbine_type (enflow.assets.hydro.hydropowerplant attribute)": [[5, "enflow.assets.hydro.HydroPowerPlant.turbine_type"]], "turbine_type (enflow.assets.hydro.hydroturbine attribute)": [[5, "enflow.assets.hydro.HydroTurbine.turbine_type"]], "hydropowerplant (class in enflow.assets.powergrid)": [[6, "enflow.assets.powergrid.HydroPowerPlant"]], "hydroturbine (class in enflow.assets.powergrid)": [[6, "enflow.assets.powergrid.HydroTurbine"]], "reservoir (class in enflow.assets.powergrid)": [[6, "enflow.assets.powergrid.Reservoir"]], "annual_output (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.annual_output"]], "average_depth (enflow.assets.powergrid.reservoir attribute)": [[6, "enflow.assets.powergrid.Reservoir.average_depth"]], "capacity (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.capacity"]], "capacity (enflow.assets.powergrid.hydroturbine attribute)": [[6, "enflow.assets.powergrid.HydroTurbine.capacity"]], "capacity (enflow.assets.powergrid.reservoir attribute)": [[6, "enflow.assets.powergrid.Reservoir.capacity"]], "efficiency (enflow.assets.powergrid.hydroturbine attribute)": [[6, "enflow.assets.powergrid.HydroTurbine.efficiency"]], "enflow.assets.powergrid": [[6, "module-enflow.assets.powergrid"]], "environmental_impact (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.environmental_impact"]], "location (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.location"]], "location (enflow.assets.powergrid.reservoir attribute)": [[6, "enflow.assets.powergrid.Reservoir.location"]], "maintenance_schedule (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.maintenance_schedule"]], "operational_since (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.operational_since"]], "operational_since (enflow.assets.powergrid.hydroturbine attribute)": [[6, "enflow.assets.powergrid.HydroTurbine.operational_since"]], "reservoir_capacity (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.reservoir_capacity"]], "river (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.river"]], "surface_area (enflow.assets.powergrid.reservoir attribute)": [[6, "enflow.assets.powergrid.Reservoir.surface_area"]], "turbine_type (enflow.assets.powergrid.hydropowerplant attribute)": [[6, "enflow.assets.powergrid.HydroPowerPlant.turbine_type"]], "turbine_type (enflow.assets.powergrid.hydroturbine attribute)": [[6, "enflow.assets.powergrid.HydroTurbine.turbine_type"]], "fixedmount (class in enflow.assets.solar)": [[7, "enflow.assets.solar.FixedMount"]], "pvarray (class in enflow.assets.solar)": [[7, "enflow.assets.solar.PVArray"]], "pvsystem (class in enflow.assets.solar)": [[7, "enflow.assets.solar.PVSystem"]], "singleaxistrackermount (class in enflow.assets.solar)": [[7, "enflow.assets.solar.SingleAxisTrackerMount"]], "solarpowerarea (class in enflow.assets.solar)": [[7, "enflow.assets.solar.SolarPowerArea"]], "albedo (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.albedo"]], "altitude (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.altitude"]], "altitude (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.altitude"]], "altitude (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.altitude"]], "axis_azimuth (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.axis_azimuth"]], "axis_tilt (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.axis_tilt"]], "backtrack (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.backtrack"]], "capacity (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.capacity"]], "capacity (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.capacity"]], "capacity (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.capacity"]], "cross_axis_tilt (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.cross_axis_tilt"]], "efficiency (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.efficiency"]], "enflow.assets.solar": [[7, "module-enflow.assets.solar"]], "gcr (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.gcr"]], "geojson (enflow.assets.solar.solarpowerarea property)": [[7, "enflow.assets.solar.SolarPowerArea.geojson"]], "geometry_to_geojson() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.solar.solarpowerarea method)": [[7, "enflow.assets.solar.SolarPowerArea.geometry_to_geojson"]], "geopolygon (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.geopolygon"]], "get_location() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.get_location"]], "get_location() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.get_location"]], "get_location() (enflow.assets.solar.solarpowerarea method)": [[7, "enflow.assets.solar.SolarPowerArea.get_location"]], "get_timeseries() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.get_timeseries"]], "inverter_parameters (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.inverter_parameters"]], "latitude (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.latitude"]], "latitude (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.latitude"]], "latitude (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.latitude"]], "location (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.location"]], "location (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.location"]], "location (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.location"]], "longitude (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.longitude"]], "longitude (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.longitude"]], "longitude (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.longitude"]], "max_angle (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.max_angle"]], "module (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.module"]], "module_height (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.module_height"]], "module_parameters (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.module_parameters"]], "module_parameters (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.module_parameters"]], "module_type (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.module_type"]], "module_type (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.module_type"]], "name (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.name"]], "name (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.name"]], "name (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.name"]], "plot_timeseries() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.plot_timeseries"]], "plot_timeseries() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.plot_timeseries"]], "plot_timeseries() (enflow.assets.solar.solarpowerarea method)": [[7, "enflow.assets.solar.SolarPowerArea.plot_timeseries"]], "pv_arrays (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.pv_arrays"]], "racking_model (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.racking_model"]], "racking_model (enflow.assets.solar.singleaxistrackermount attribute)": [[7, "enflow.assets.solar.SingleAxisTrackerMount.racking_model"]], "surface_area (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.surface_area"]], "surface_azimuth (enflow.assets.solar.fixedmount attribute)": [[7, "enflow.assets.solar.FixedMount.surface_azimuth"]], "surface_azimuth (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.surface_azimuth"]], "surface_azimuth (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.surface_azimuth"]], "surface_tilt (enflow.assets.solar.fixedmount attribute)": [[7, "enflow.assets.solar.FixedMount.surface_tilt"]], "surface_tilt (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.surface_tilt"]], "surface_tilt (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.surface_tilt"]], "surface_type (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.surface_type"]], "temperature_model_parameters (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.temperature_model_parameters"]], "timeseries (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.timeseries"]], "timeseries (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.timeseries"]], "timeseries (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.timeseries"]], "to_dataframe() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.to_dataframe"]], "to_dataframe() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.to_dataframe"]], "to_dataframe() (enflow.assets.solar.solarpowerarea method)": [[7, "enflow.assets.solar.SolarPowerArea.to_dataframe"]], "to_geojson() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.to_geojson"]], "to_geojson() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.to_geojson"]], "to_geojson() (enflow.assets.solar.solarpowerarea method)": [[7, "enflow.assets.solar.SolarPowerArea.to_geojson"]], "to_json() (enflow.assets.solar.pvarray method)": [[7, "enflow.assets.solar.PVArray.to_json"]], "to_json() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.to_json"]], "to_json() (enflow.assets.solar.solarpowerarea method)": [[7, "enflow.assets.solar.SolarPowerArea.to_json"]], "to_pvlib() (enflow.assets.solar.pvsystem method)": [[7, "enflow.assets.solar.PVSystem.to_pvlib"]], "tz (enflow.assets.solar.pvarray attribute)": [[7, "enflow.assets.solar.PVArray.tz"]], "tz (enflow.assets.solar.pvsystem attribute)": [[7, "enflow.assets.solar.PVSystem.tz"]], "tz (enflow.assets.solar.solarpowerarea attribute)": [[7, "enflow.assets.solar.SolarPowerArea.tz"]], "electricityareaconsumption (in module enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityAreaConsumption"]], "electricityareademand (class in enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand"]], "electricityareaproduction (in module enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityAreaProduction"]], "electricityareasupply (class in enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply"]], "electricityconsumption (in module enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityConsumption"]], "electricitydemand (class in enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityDemand"]], "electricityproduction (in module enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricityProduction"]], "electricitysupply (class in enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.ElectricitySupply"]], "heatingareademand (class in enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.HeatingAreaDemand"]], "heatingconsumption (in module enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.HeatingConsumption"]], "heatingdemand (class in enflow.assets.timeseries)": [[8, "enflow.assets.timeseries.HeatingDemand"]], "area (enflow.assets.timeseries.electricityareademand attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.area"]], "area (enflow.assets.timeseries.electricityareasupply attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.area"]], "area (enflow.assets.timeseries.heatingareademand attribute)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.area"]], "column_names (enflow.assets.timeseries.electricityareademand attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.column_names"]], "column_names (enflow.assets.timeseries.electricityareasupply attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.column_names"]], "column_names (enflow.assets.timeseries.electricitydemand attribute)": [[8, "enflow.assets.timeseries.ElectricityDemand.column_names"]], "column_names (enflow.assets.timeseries.electricitysupply attribute)": [[8, "enflow.assets.timeseries.ElectricitySupply.column_names"]], "column_names (enflow.assets.timeseries.heatingareademand attribute)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.column_names"]], "column_names (enflow.assets.timeseries.heatingdemand attribute)": [[8, "enflow.assets.timeseries.HeatingDemand.column_names"]], "df (enflow.assets.timeseries.electricityareademand attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.df"]], "df (enflow.assets.timeseries.electricityareasupply attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.df"]], "df (enflow.assets.timeseries.electricitydemand attribute)": [[8, "enflow.assets.timeseries.ElectricityDemand.df"]], "df (enflow.assets.timeseries.electricitysupply attribute)": [[8, "enflow.assets.timeseries.ElectricitySupply.df"]], "df (enflow.assets.timeseries.heatingareademand attribute)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.df"]], "df (enflow.assets.timeseries.heatingdemand attribute)": [[8, "enflow.assets.timeseries.HeatingDemand.df"]], "enflow.assets.timeseries": [[8, "module-enflow.assets.timeseries"]], "filename (enflow.assets.timeseries.electricityareademand attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.filename"]], "filename (enflow.assets.timeseries.electricityareasupply attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.filename"]], "filename (enflow.assets.timeseries.electricitydemand attribute)": [[8, "enflow.assets.timeseries.ElectricityDemand.filename"]], "filename (enflow.assets.timeseries.electricitysupply attribute)": [[8, "enflow.assets.timeseries.ElectricitySupply.filename"]], "filename (enflow.assets.timeseries.heatingareademand attribute)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.filename"]], "filename (enflow.assets.timeseries.heatingdemand attribute)": [[8, "enflow.assets.timeseries.HeatingDemand.filename"]], "geometry_to_geojson() (enflow.assets.timeseries.electricityareademand method)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.timeseries.electricityareasupply method)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.timeseries.electricitydemand method)": [[8, "enflow.assets.timeseries.ElectricityDemand.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.timeseries.electricitysupply method)": [[8, "enflow.assets.timeseries.ElectricitySupply.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.timeseries.heatingareademand method)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.timeseries.heatingdemand method)": [[8, "enflow.assets.timeseries.HeatingDemand.geometry_to_geojson"]], "get_data() (enflow.assets.timeseries.electricityareademand method)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.get_data"]], "get_data() (enflow.assets.timeseries.electricityareasupply method)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.get_data"]], "get_data() (enflow.assets.timeseries.electricitydemand method)": [[8, "enflow.assets.timeseries.ElectricityDemand.get_data"]], "get_data() (enflow.assets.timeseries.electricitysupply method)": [[8, "enflow.assets.timeseries.ElectricitySupply.get_data"]], "get_data() (enflow.assets.timeseries.heatingareademand method)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.get_data"]], "get_data() (enflow.assets.timeseries.heatingdemand method)": [[8, "enflow.assets.timeseries.HeatingDemand.get_data"]], "location (enflow.assets.timeseries.electricitydemand attribute)": [[8, "enflow.assets.timeseries.ElectricityDemand.location"]], "location (enflow.assets.timeseries.electricitysupply attribute)": [[8, "enflow.assets.timeseries.ElectricitySupply.location"]], "location (enflow.assets.timeseries.heatingdemand attribute)": [[8, "enflow.assets.timeseries.HeatingDemand.location"]], "name (enflow.assets.timeseries.electricityareademand attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.name"]], "name (enflow.assets.timeseries.electricityareasupply attribute)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.name"]], "name (enflow.assets.timeseries.electricitydemand attribute)": [[8, "enflow.assets.timeseries.ElectricityDemand.name"]], "name (enflow.assets.timeseries.electricitysupply attribute)": [[8, "enflow.assets.timeseries.ElectricitySupply.name"]], "name (enflow.assets.timeseries.heatingareademand attribute)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.name"]], "name (enflow.assets.timeseries.heatingdemand attribute)": [[8, "enflow.assets.timeseries.HeatingDemand.name"]], "plot() (enflow.assets.timeseries.electricityareademand method)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.plot"]], "plot() (enflow.assets.timeseries.electricityareasupply method)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.plot"]], "plot() (enflow.assets.timeseries.electricitydemand method)": [[8, "enflow.assets.timeseries.ElectricityDemand.plot"]], "plot() (enflow.assets.timeseries.electricitysupply method)": [[8, "enflow.assets.timeseries.ElectricitySupply.plot"]], "plot() (enflow.assets.timeseries.heatingareademand method)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.plot"]], "plot() (enflow.assets.timeseries.heatingdemand method)": [[8, "enflow.assets.timeseries.HeatingDemand.plot"]], "to_dataframe() (enflow.assets.timeseries.electricityareademand method)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.to_dataframe"]], "to_dataframe() (enflow.assets.timeseries.electricityareasupply method)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.to_dataframe"]], "to_dataframe() (enflow.assets.timeseries.electricitydemand method)": [[8, "enflow.assets.timeseries.ElectricityDemand.to_dataframe"]], "to_dataframe() (enflow.assets.timeseries.electricitysupply method)": [[8, "enflow.assets.timeseries.ElectricitySupply.to_dataframe"]], "to_dataframe() (enflow.assets.timeseries.heatingareademand method)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.to_dataframe"]], "to_dataframe() (enflow.assets.timeseries.heatingdemand method)": [[8, "enflow.assets.timeseries.HeatingDemand.to_dataframe"]], "to_geojson() (enflow.assets.timeseries.electricityareademand method)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.to_geojson"]], "to_geojson() (enflow.assets.timeseries.electricityareasupply method)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.to_geojson"]], "to_geojson() (enflow.assets.timeseries.electricitydemand method)": [[8, "enflow.assets.timeseries.ElectricityDemand.to_geojson"]], "to_geojson() (enflow.assets.timeseries.electricitysupply method)": [[8, "enflow.assets.timeseries.ElectricitySupply.to_geojson"]], "to_geojson() (enflow.assets.timeseries.heatingareademand method)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.to_geojson"]], "to_geojson() (enflow.assets.timeseries.heatingdemand method)": [[8, "enflow.assets.timeseries.HeatingDemand.to_geojson"]], "to_json() (enflow.assets.timeseries.electricityareademand method)": [[8, "enflow.assets.timeseries.ElectricityAreaDemand.to_json"]], "to_json() (enflow.assets.timeseries.electricityareasupply method)": [[8, "enflow.assets.timeseries.ElectricityAreaSupply.to_json"]], "to_json() (enflow.assets.timeseries.electricitydemand method)": [[8, "enflow.assets.timeseries.ElectricityDemand.to_json"]], "to_json() (enflow.assets.timeseries.electricitysupply method)": [[8, "enflow.assets.timeseries.ElectricitySupply.to_json"]], "to_json() (enflow.assets.timeseries.heatingareademand method)": [[8, "enflow.assets.timeseries.HeatingAreaDemand.to_json"]], "to_json() (enflow.assets.timeseries.heatingdemand method)": [[8, "enflow.assets.timeseries.HeatingDemand.to_json"]], "windfarm (class in enflow.assets.wind)": [[9, "enflow.assets.wind.WindFarm"]], "windpowerarea (class in enflow.assets.wind)": [[9, "enflow.assets.wind.WindPowerArea"]], "windturbine (class in enflow.assets.wind)": [[9, "enflow.assets.wind.WindTurbine"]], "altitude (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.altitude"]], "altitude (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.altitude"]], "area (enflow.assets.wind.windpowerarea attribute)": [[9, "enflow.assets.wind.WindPowerArea.area"]], "capacity (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.capacity"]], "capacity (enflow.assets.wind.windpowerarea attribute)": [[9, "enflow.assets.wind.WindPowerArea.capacity"]], "capacity (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.capacity"]], "create_table_representation() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.create_table_representation"]], "enflow.assets.wind": [[9, "module-enflow.assets.wind"]], "farm_efficiency (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.farm_efficiency"]], "farm_efficiency (enflow.assets.wind.windpowerarea attribute)": [[9, "enflow.assets.wind.WindPowerArea.farm_efficiency"]], "geometry_to_geojson() (enflow.assets.wind.windfarm method)": [[9, "enflow.assets.wind.WindFarm.geometry_to_geojson"]], "geometry_to_geojson() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.geometry_to_geojson"]], "geopolygon (enflow.assets.wind.windpowerarea attribute)": [[9, "enflow.assets.wind.WindPowerArea.geopolygon"]], "get_location() (enflow.assets.wind.windfarm method)": [[9, "enflow.assets.wind.WindFarm.get_location"]], "get_location() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.get_location"]], "hub_height (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.hub_height"]], "latitude (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.latitude"]], "latitude (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.latitude"]], "location (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.location"]], "location (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.location"]], "longitude (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.longitude"]], "longitude (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.longitude"]], "name (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.name"]], "name (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.name"]], "plot_timeseries() (enflow.assets.wind.windfarm method)": [[9, "enflow.assets.wind.WindFarm.plot_timeseries"]], "plot_timeseries() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.plot_timeseries"]], "power_coefficient_curve (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.power_coefficient_curve"]], "power_curve (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.power_curve"]], "rotor_diameter (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.rotor_diameter"]], "timeseries (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.timeseries"]], "timeseries (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.timeseries"]], "to_dataframe() (enflow.assets.wind.windfarm method)": [[9, "enflow.assets.wind.WindFarm.to_dataframe"]], "to_dataframe() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.to_dataframe"]], "to_geojson() (enflow.assets.wind.windfarm method)": [[9, "enflow.assets.wind.WindFarm.to_geojson"]], "to_geojson() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.to_geojson"]], "to_json() (enflow.assets.wind.windfarm method)": [[9, "enflow.assets.wind.WindFarm.to_json"]], "to_json() (enflow.assets.wind.windturbine method)": [[9, "enflow.assets.wind.WindTurbine.to_json"]], "turbine_model (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.turbine_model"]], "tz (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.tz"]], "tz (enflow.assets.wind.windturbine attribute)": [[9, "enflow.assets.wind.WindTurbine.tz"]], "wind_turbines (enflow.assets.wind.windfarm attribute)": [[9, "enflow.assets.wind.WindFarm.wind_turbines"]], "wind_turbines (enflow.assets.wind.windpowerarea attribute)": [[9, "enflow.assets.wind.WindPowerArea.wind_turbines"]], "experiment (class in enflow.experiments.experiment)": [[11, "enflow.experiments.experiment.Experiment"]], "enflow.experiments.experiment": [[11, "module-enflow.experiments.experiment"]], "run() (enflow.experiments.experiment.experiment method)": [[11, "enflow.experiments.experiment.Experiment.run"]], "agent (class in enflow.models.agent)": [[15, "enflow.models.agent.Agent"]], "act() (enflow.models.agent.agent method)": [[15, "enflow.models.agent.Agent.act"]], "enflow.models.agent": [[15, "module-enflow.models.agent"]], "learn() (enflow.models.agent.agent method)": [[15, "enflow.models.agent.Agent.learn"]], "optimizer (class in enflow.models.optimizer)": [[16, "enflow.models.optimizer.Optimizer"]], "enflow.models.optimizer": [[16, "module-enflow.models.optimizer"]], "optimize() (enflow.models.optimizer.optimizer method)": [[16, "enflow.models.optimizer.Optimizer.optimize"]], "predictor (class in enflow.models.predictor)": [[17, "enflow.models.predictor.Predictor"]], "copy() (enflow.models.predictor.predictor method)": [[17, "enflow.models.predictor.Predictor.copy"]], "create_features() (enflow.models.predictor.predictor method)": [[17, "enflow.models.predictor.Predictor.create_features"]], "enflow.models.predictor": [[17, "module-enflow.models.predictor"]], "load_data() (enflow.models.predictor.predictor method)": [[17, "enflow.models.predictor.Predictor.load_data"]], "predict() (enflow.models.predictor.predictor method)": [[17, "enflow.models.predictor.Predictor.predict"]], "train() (enflow.models.predictor.predictor method)": [[17, "enflow.models.predictor.Predictor.train"]], "simulator (class in enflow.models.simulator)": [[18, "enflow.models.simulator.Simulator"]], "enflow.models.simulator": [[18, "module-enflow.models.simulator"]], "reset() (enflow.models.simulator.simulator method)": [[18, "enflow.models.simulator.Simulator.reset"]], "step() (enflow.models.simulator.simulator method)": [[18, "enflow.models.simulator.Simulator.step"]], "dataset (class in enflow.problems.dataset)": [[22, "enflow.problems.dataset.Dataset"]], "collection (enflow.problems.dataset.dataset attribute)": [[22, "enflow.problems.dataset.Dataset.collection"]], "data (enflow.problems.dataset.dataset attribute)": [[22, "enflow.problems.dataset.Dataset.data"]], "description (enflow.problems.dataset.dataset attribute)": [[22, "enflow.problems.dataset.Dataset.description"]], "enflow.problems.dataset": [[22, "module-enflow.problems.dataset"]], "list_data (enflow.problems.dataset.dataset property)": [[22, "enflow.problems.dataset.Dataset.list_data"]], "name (enflow.problems.dataset.dataset attribute)": [[22, "enflow.problems.dataset.Dataset.name"]], "basespace (class in enflow.spaces.base)": [[25, "enflow.spaces.base.BaseSpace"]], "enflow.spaces.base": [[25, "module-enflow.spaces.base"]], "from_array() (enflow.spaces.base.basespace class method)": [[25, "enflow.spaces.base.BaseSpace.from_array"]], "from_tuple() (enflow.spaces.base.basespace class method)": [[25, "enflow.spaces.base.BaseSpace.from_tuple"]], "to_array() (enflow.spaces.base.basespace method)": [[25, "enflow.spaces.base.BaseSpace.to_array"]], "to_tuple() (enflow.spaces.base.basespace method)": [[25, "enflow.spaces.base.BaseSpace.to_tuple"]], "tuple (enflow.spaces.base.basespace property)": [[25, "enflow.spaces.base.BaseSpace.tuple"]], "vector (enflow.spaces.base.basespace property)": [[25, "enflow.spaces.base.BaseSpace.vector"]], "inputspace (class in enflow.spaces.input)": [[26, "enflow.spaces.input.InputSpace"]], "statespace (in module enflow.spaces.input)": [[26, "enflow.spaces.input.StateSpace"]], "enflow.spaces.input": [[26, "module-enflow.spaces.input"]], "actionspace (in module enflow.spaces.output)": [[27, "enflow.spaces.output.ActionSpace"]], "outputspace (class in enflow.spaces.output)": [[27, "enflow.spaces.output.OutputSpace"]], "enflow.spaces.output": [[27, "module-enflow.spaces.output"]]}})